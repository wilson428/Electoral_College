(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[     88123,       1786]
NotebookOptionsPosition[     82786,       1697]
NotebookOutlinePosition[     83198,       1715]
CellTagsIndexPosition[     83155,       1712]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SetDirectory", "@", 
   RowBox[{"NotebookDirectory", "[", "]"}]}], ";"}], "\n", 
 RowBox[{"SetOptions", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Notebooks", "[", "\"\<apportionment.nb\>\"", "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"AutoGeneratedPackage", "->", "Automatic"}]}], "]"}]}], "Input",
 CellLabel->
  "In[284]:=",ExpressionUUID->"2cf11a5f-25ed-4589-b374-f4d85abe0460"],

Cell[CellGroupData[{

Cell["Apportionment Algorithms", "Title",ExpressionUUID->"a94aa734-d384-4b55-abf6-a0696c90c4ba"],

Cell["\<\
Every ten years, after the decennial Census, the U.S. reallocates the 435 \
members of Congress based on updated state populations. This has major \
implications for both legislation and presidential elections, since a state's \
electoral votes are determined the size of its delegation. Is there a better \
way?\
\>", "Text",
 CellChangeTimes->{{3.743972052600965*^9, 
  3.74397205319271*^9}},ExpressionUUID->"6178ec3e-b46e-4957-a90e-\
725ebea4b7f2"],

Cell[CellGroupData[{

Cell["Loading the Data", "Section",ExpressionUUID->"9d27052b-bc8d-4418-a1c2-f8ef6f7f69b6"],

Cell["\<\
While Mathematica has population conveniently built in to state entities \
through the Wolfram Data Repository, let's be extra careful and use the same \
decennial Census figures the government has used for apportionment, as well \
as the official number of representatives per state allotted every tens years \
to compare to alternate methods. This data is conveniently organized on \
Census.gov and gathered in `getPopulationApportionment.nb`\
\>", "Text",ExpressionUUID->"ff020f34-73ad-4499-bf7e-3c75b0169b3c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"statesByAbbreviation", " ", "=", " ", 
     RowBox[{
     "Import", "[", "\"\<./data/state_population_reps_evs.wl\>\"", "]"}]}], 
    ";"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"statesByAbbreviation", " ", "=", " ", 
     RowBox[{
     "CloudGet", "[", 
      "\"\<https://www.wolframcloud.com/objects/1a4bfb31-d5d4-49e3-9e04-\
4cf80e1fae1b\>\"", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"stateAbbrs", " ", "=", " ", 
     RowBox[{"Keys", "@", "statesByAbbreviation"}]}], ";"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "We", " ", "need", " ", "a", " ", "list", " ", "of", " ", "state", " ", 
     "abbreviations", " ", "without", " ", "DC", " ", "since", " ", "it", " ",
      "is", " ", "not", " ", "factored", " ", "into", " ", 
     RowBox[{"allocation", " ", "--"}], " ", 
     "\"\<Taxation Without Representation!\>\""}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"stateAbbrs50", " ", "=", " ", 
     RowBox[{"Select", "[", 
      RowBox[{"stateAbbrs", ",", " ", 
       RowBox[{
        RowBox[{"#", " ", "!=", " ", "\"\<DC\>\""}], "&"}]}], "]"}]}], 
    ";"}]}]}]], "Code",
 CellChangeTimes->{{3.743971523036969*^9, 3.7439715271050673`*^9}, {
  3.7439739259357643`*^9, 3.743973944874013*^9}, {3.744241018250429*^9, 
  3.7442410235221977`*^9}},
 CellLabel->
  "In[287]:=",ExpressionUUID->"2bf262a5-3f7e-4c10-8f37-38e3b7392466"]
}, Open  ]],

Cell[CellGroupData[{

Cell["How it works now: The Huntington-Hill method", "Section",ExpressionUUID->"b73fd97a-ed90-432c-aa03-bd5d578d2f3e"],

Cell["\<\
Since the 1940 Census, the United States has used the Huntington-Hill \
algorithm, known as the \"method of equal proportions,\" to divvy up the 435 \
House seats. This begins by allotting one electoral vote to each state, \
leaving 385 left. The 50 states are then allotted these remaining seats \
one-by-one according to which one has the highest priority as determined by a \
simple equation: its population divided by the square root of its current \
seats times one extra seat (the Geometric Mean): \
\>", "Text",ExpressionUUID->"1d779c54-c76a-4a69-a957-e0bd9a89751e"],

Cell[TextData[Cell[BoxData[
 FractionBox["P", 
  SqrtBox[
   RowBox[{"n", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "n"}], ")"}]}]]]],
 CellChangeTimes->{{3.743971585847269*^9, 3.7439715859296703`*^9}},
 FontSize->36,ExpressionUUID->"bf3d3437-c386-47d1-a75a-5c7fae1acfdd"]], "Text",\

 CellChangeTimes->{3.743971590654585*^9},
 TextAlignment->Center,ExpressionUUID->"e649f26b-bf35-4f4b-bbb4-6914c54a4989"],

Cell[TextData[Cell[BoxData[
 ButtonBox[
  TagBox[
   TemplateBox[{
    TemplateArgBox[
     "\"https://en.wikipedia.org/wiki/United_States_congressional_\
apportionment#The_method_of_equal_proportions\"", 1],StyleBox[
      TemplateArgBox[
      "\"https://en.wikipedia.org/wiki/United_States_congressional_\
apportionment#The_method_of_equal_proportions\"", 1], "HyperlinkActive"],
     BaseStyle -> "Hyperlink"},
    "MouseoverTemplate"],
   MouseAppearanceTag["LinkHand"]],
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://en.wikipedia.org/wiki/United_States_congressional_\
apportionment#The_method_of_equal_proportions"], None},
  ButtonNote->
   "https://en.wikipedia.org/wiki/United_States_congressional_apportionment#\
The_method_of_equal_proportions"]],
 CellChangeTimes->{{3.743971585847269*^9, 3.7439715859296703`*^9}, 
   3.7439716197092733`*^9},ExpressionUUID->"9b69ffdd-5ff9-4890-a407-\
32156add6c54"]], "Text",
 CellChangeTimes->{3.743971630519153*^9},
 FontSize->12,ExpressionUUID->"02a01ddf-b7c2-47bd-b0c3-dcaddf6cd631"],

Cell["\<\
Let's make this equation a function for a given state, getting the 2010 \
decennial Census data from the data we loaded and feeding it the current \
number of allocated seats\
\>", "Text",ExpressionUUID->"f9e34095-38a9-4934-a780-dcb013ff437e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"priorityHuntingtonHill", "[", 
   RowBox[{"stateAbbr_", ",", " ", "stateReps_"}], "]"}], " ", ":=", " ", 
  "\n", "\t", 
  RowBox[{"1.0", " ", "*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"statesByAbbreviation", "[", "stateAbbr", "]"}], "[", 
      "\"\<population_decennial\>\"", "]"}], "[", "\"\<2010\>\"", "]"}], " ", 
    "/", " ", 
    RowBox[{"Sqrt", "[", 
     RowBox[{"stateReps", " ", "*", " ", 
      RowBox[{"(", 
       RowBox[{"stateReps", " ", "+", " ", "1"}], ")"}]}], 
     "]"}]}]}]}]], "Code",
 CellChangeTimes->{{3.743971807857853*^9, 3.7439718244881363`*^9}, {
  3.744140585948243*^9, 3.7441405972128887`*^9}, {3.744241046171139*^9, 
  3.744241046568988*^9}},
 CellLabel->
  "In[290]:=",ExpressionUUID->"087600f7-9c93-439a-9057-c6773d5050b8"],

Cell["\<\
The allocation function will assign electoral votes according to the above \
formula one at a time. We're also going to explicitly pass the priority \
function in case we want to try a different one later, which we definitely \
will, and parameterize all aspects of the allocation algorithm:\
\>", "Text",ExpressionUUID->"91fef37e-13ee-4d71-9d33-6181cda44c48"],

Cell["\<\
To save time, we' re also going to store the priorities until we update the \
number of seats in a state rather than run 50 square roots 385 times.\
\>", "Text",ExpressionUUID->"b42ed573-6acc-4324-9330-3f1d772d287f"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["total_",
  FontWeight->"Bold"],
 " is the total number of seats to allocate, defaulting to 435"
}], "Item",ExpressionUUID->"86ce69d6-c1c1-44d5-b308-d39d7186f727"],

Cell[TextData[{
 StyleBox["min_",
  FontWeight->"Bold"],
 " is the default number of seats that every state begins with, defaulting to \
1"
}], "Item",
 CellChangeTimes->{{3.744140317107506*^9, 
  3.744140317108218*^9}},ExpressionUUID->"7f043f8b-e4ba-464d-82a9-\
0d10cdb197da"],

Cell[TextData[{
 StyleBox["bonus_",
  FontWeight->"Bold"],
 " is the number of seats every state gets at the ",
 StyleBox["end",
  FontSlant->"Italic"],
 " of the process, after ",
 StyleBox["total_",
  FontWeight->"Bold"],
 " is depleted. Default is 0. Setting to 2 calculates electoral votes by \
accounting for senators, ",
 StyleBox["so long as you remember",
  FontSlant->"Italic"],
 " to add 3 for Washington, D.C.!"
}], "Item",
 CellChangeTimes->{{3.7441403184907217`*^9, 
  3.744140436831414*^9}},ExpressionUUID->"14b2db89-f135-4af4-b985-\
70df4d659ac3"],

Cell[TextData[{
 StyleBox["priorityFunc_",
  FontWeight->"Bold"],
 " is the means of determining a state's priority, defaulting to the \
Huntington-Hill function defined above"
}], "Item",ExpressionUUID->"27a7ff42-1437-4dcf-ab9d-0969f34737da"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"AllocateOne", "[", 
     RowBox[{"reps_", ",", " ", "priorities_", ",", " ", 
      RowBox[{"priorityFunc_:", "priorityHuntingtonHill"}]}], "]"}], " ", ":=",
     " ", 
    RowBox[{"(", "\n", "\t", 
     RowBox[{
      RowBox[{"topPriority", " ", "=", " ", 
       RowBox[{"First", "[", 
        RowBox[{"Keys", "[", 
         RowBox[{"Reverse", "[", 
          RowBox[{"Sort", "[", "priorities", "]"}], "]"}], "]"}], "]"}]}], 
      ";", "\n", "\t", 
      RowBox[{"updatedPriorities", " ", "=", " ", "priorities"}], ";", "\n", 
      "\t", 
      RowBox[{"updatedReps", " ", "=", " ", "reps"}], ";", "\n", "\t", 
      RowBox[{
       RowBox[{"updatedReps", "[", "topPriority", "]"}], " ", "+=", " ", 
       "1"}], ";", "\n", "\t", 
      RowBox[{
       RowBox[{"updatedPriorities", "[", "topPriority", "]"}], " ", "=", " ", 
       
       RowBox[{"priorityFunc", "[", 
        RowBox[{"topPriority", ",", " ", 
         RowBox[{"updatedReps", "[", "topPriority", "]"}]}], "]"}]}], ";", 
      "\n", "\t", 
      RowBox[{"{", " ", 
       RowBox[{"updatedReps", ",", " ", "updatedPriorities"}], " ", "}"}]}], 
     "\n", ")"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"calculateAllocations", "[", 
    RowBox[{
     RowBox[{"totalBase_:", "435"}], ",", " ", 
     RowBox[{"min_:", "1"}], ",", " ", 
     RowBox[{"bonus_:", "0"}], ",", " ", 
     RowBox[{"priorityFunc_:", "priorityHuntingtonHill"}]}], "]"}], ":=", " ", 
   RowBox[{"(", "\n", "\t", 
    RowBox[{
     RowBox[{"total", " ", "=", " ", 
      RowBox[{"totalBase", " ", "+", " ", 
       RowBox[{"50", " ", "*", " ", 
        RowBox[{"-", "bonus"}]}]}]}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
       "we", " ", "need", " ", "to", " ", "add", " ", "the", " ", "post"}], 
       "-", 
       RowBox[{
       "facto", " ", "bonus", " ", "to", " ", "the", " ", "total", " ", "so", 
        " ", "that", " ", "it", " ", 
        RowBox[{"doesn", "'"}], "t", " ", "count", " ", "against", " ", 
        "it"}]}], " ", "*)"}], "\n", "\t", 
     RowBox[{"stateReps", " ", "=", " ", 
      RowBox[{"AssociationThread", "[", 
       RowBox[{"stateAbbrs50", ",", " ", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"min", ",", " ", "50"}], "]"}]}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"statePriorities", " ", "=", " ", 
      RowBox[{"AssociationThread", "[", 
       RowBox[{"stateAbbrs50", ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"priorityFunc", "[", 
           RowBox[{"#", ",", " ", "1"}], "]"}], "&"}], " ", "/@", " ", 
         "stateAbbrs50"}]}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Total", "@", "stateReps"}], " ", "<", " ", "total"}], ",", 
       " ", 
       RowBox[{
        RowBox[{"{", " ", 
         RowBox[{"stateReps", ",", " ", "statePriorities"}], " ", "}"}], " ", 
        "=", " ", 
        RowBox[{"AllocateOne", "[", 
         RowBox[{
         "stateReps", ",", " ", "statePriorities", ",", " ", "priorityFunc"}],
          "]"}]}]}], "]"}], ";", "\n", "\t", 
     RowBox[{"stateReps", " ", "=", " ", 
      RowBox[{"stateReps", " ", "+", " ", "bonus"}]}], ";", "\n", "\t", 
     RowBox[{"KeySort", "@", "stateReps"}]}], "\n", ")"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.7439739616081047`*^9, 3.743973964053627*^9}, {
   3.744015843132306*^9, 3.744015850337661*^9}, {3.744018209099641*^9, 
   3.744018221689678*^9}, {3.7441403087893476`*^9, 3.744140312819528*^9}, {
   3.744140450842209*^9, 3.744140508341722*^9}, {3.7441406029407043`*^9, 
   3.744140643210058*^9}, {3.7442328277965183`*^9, 3.744232834844722*^9}, 
   3.7442344370894747`*^9, {3.744241057282181*^9, 3.744241143037594*^9}, 
   3.7442412286690073`*^9},
 CellLabel->
  "In[291]:=",ExpressionUUID->"2af2792f-4235-493c-9191-817ddf6498e6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Getting and mapping the effects of our calculations", "Section",
 CellChangeTimes->{{3.744232381624807*^9, 3.744232384887162*^9}, {
  3.744242180156714*^9, 
  3.744242193203006*^9}},ExpressionUUID->"bb05200d-1973-4243-988d-\
532d56d44760"],

Cell["\<\
We need to be able to compare our results to the real apportionment, both to \
check our algorithm and see how modifications change it.\
\>", "Text",
 CellChangeTimes->{{3.744232393725853*^9, 3.744232419830069*^9}, 
   3.7442425553676977`*^9},ExpressionUUID->"4a33735d-50f3-459d-989f-\
68ac96c2bc13"],

Cell["Here\[CloseCurlyQuote]s a few colors we\[CloseCurlyQuote]ll be using", \
"Text",
 CellChangeTimes->{{3.74424255843953*^9, 
  3.744242564863229*^9}},ExpressionUUID->"cae51f5a-abb1-43e1-9609-\
623947536585"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", " ", 
    RowBox[{
    "lightOrange", ",", " ", "darkOrange", ",", " ", "green", ",", " ", 
     "purple", ",", " ", "lightGray"}], " ", "}"}], " ", "=", " ", 
   RowBox[{"{", " ", 
    RowBox[{
     RowBox[{"RGBColor", "[", "\"\<#FFA63B\>\"", "]"}], ",", " ", 
     RowBox[{"RGBColor", "[", "\"\<#FF703B\>\"", "]"}], ",", " ", 
     RowBox[{"RGBColor", "[", "\"\<#47C045\>\"", "]"}], ",", " ", 
     RowBox[{"RGBColor", "[", "\"\<#E165FA\>\"", "]"}], ",", " ", 
     RowBox[{"RGBColor", "[", "\"\<#DCDCDC\>\"", "]"}]}], " ", "}"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.744242566952319*^9, 3.744242621644766*^9}, 
   3.744245358536373*^9, 3.7442571961618023`*^9},
 CellLabel->
  "In[293]:=",ExpressionUUID->"d82cc2cd-2590-44cc-8aaa-fbbb589c07a4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"houseOfRepresentatives", " ", "=", " ", 
   RowBox[{"AssociationThread", "[", "\n", "\t", 
    RowBox[{"stateAbbrs50", ",", "\n", "\t", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"statesByAbbreviation", "[", "#", "]"}], "[", 
         "\"\<representatives\>\"", "]"}], "[", "\"\<2010\>\"", "]"}], "&"}], 
      " ", "/@", " ", "stateAbbrs50"}]}], "\n", "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.7439719726950817`*^9, 3.743971978083144*^9}},
 CellLabel->
  "In[294]:=",ExpressionUUID->"56735894-7ade-4fad-a1a6-be4f0e19141f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getDiffs", "[", "calculatedReps_", "]"}], " ", ":=", " ", 
   RowBox[{"calculatedReps", " ", "-", " ", "houseOfRepresentatives"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.7441417065216837`*^9, 3.744141732736431*^9}},
 CellLabel->
  "In[295]:=",ExpressionUUID->"8e286f74-46c1-41c6-baa8-2a4c6f7af786"],

Cell["\<\
We're going to optionally include the ability to sort the results\
\>", "Text",
 CellChangeTimes->{{3.744242735349943*^9, 3.744242756521319*^9}, 
   3.744245366487117*^9},ExpressionUUID->"7ce24e0a-572a-4388-be00-\
33a966594185"],

Cell[BoxData[
 RowBox[{
  RowBox[{"makeRows", "[", 
   RowBox[{"calculatedReps_", ",", " ", 
    RowBox[{"sortBy_:", "\"\<alpha\>\""}], ",", " ", 
    RowBox[{"ascendDescend_:", "-", "1"}]}], "]"}], " ", ":=", " ", 
  RowBox[{"(", "\n", "\t", 
   RowBox[{
    RowBox[{"diffs", " ", "=", " ", 
     RowBox[{"getDiffs", "[", "calculatedReps", "]"}]}], ";", "\n", "\t", 
    RowBox[{"stateKeys", " ", "=", " ", 
     RowBox[{"Keys", "@", "houseOfRepresentatives"}]}], ";", "\n", "\t", "\n",
     "\t", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"now", " ", "we", " ", "can", " ", 
       RowBox[{"sort", ".", " ", "This"}], " ", "is", " ", "like", " ", "a", 
       " ", "`Switch`", " ", "statement"}], ",", " ", 
      RowBox[{
      "but", " ", "a", " ", "little", " ", "easier", " ", "to", " ", 
       "read"}]}], " ", "*)"}], "\n", "\t", 
    RowBox[{"sortRules", " ", "=", " ", 
     RowBox[{"<|", "\n", "\t\t", 
      RowBox[{
       RowBox[{"\"\<alpha\>\"", " ", "\[Rule]", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"ascendDescend", " ", "\[Equal]", " ", 
           RowBox[{"-", "1"}]}], ",", " ", 
          RowBox[{"Sort", "@", 
           RowBox[{"Keys", "@", "houseOfRepresentatives"}]}], ",", " ", 
          RowBox[{"Reverse", "@", 
           RowBox[{"Sort", "@", 
            RowBox[{"Keys", "@", "houseOfRepresentatives"}]}]}]}], "]"}]}], 
       ",", "\n", "\t\t", 
       RowBox[{"\"\<actual\>\"", " ", "\[Rule]", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"ascendDescend", " ", "\[Equal]", " ", 
           RowBox[{"-", "1"}]}], ",", " ", 
          RowBox[{"Keys", "[", 
           RowBox[{"Sort", "@", "houseOfRepresentatives"}], "]"}], ",", " ", 
          RowBox[{"Keys", "[", 
           RowBox[{"Reverse", "@", 
            RowBox[{"Sort", "@", "houseOfRepresentatives"}]}], "]"}]}], 
         "]"}]}], ",", "\n", "\t\t", 
       RowBox[{"\"\<yours\>\"", " ", "\[Rule]", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"ascendDescend", " ", "\[Equal]", " ", 
           RowBox[{"-", "1"}]}], ",", " ", 
          RowBox[{"Keys", "[", 
           RowBox[{"Sort", "@", "calculatedReps"}], "]"}], ",", " ", 
          RowBox[{"Keys", "[", 
           RowBox[{"Reverse", "@", 
            RowBox[{"Sort", "@", "calculatedReps"}]}], "]"}]}], "]"}]}], ",", 
       "\n", "\t\t", 
       RowBox[{"\"\<delta\>\"", " ", "\[Rule]", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"ascendDescend", " ", "\[Equal]", " ", 
           RowBox[{"-", "1"}]}], ",", " ", 
          RowBox[{"Keys", "[", 
           RowBox[{"Sort", "@", "diffs"}], "]"}], ",", " ", 
          RowBox[{"Keys", "[", 
           RowBox[{"Reverse", "@", 
            RowBox[{"Sort", "@", "diffs"}]}], "]"}]}], "]"}]}]}], "\n", "\t", 
      "|>"}]}], ";", "\n", "\n", "\t", 
    RowBox[{"stateNames", " ", "=", " ", 
     RowBox[{"sortRules", "[", "sortBy", "]"}]}], ";", "\n", "\t\t", "\n", 
    "\t", 
    RowBox[{"maxDiff", " ", "=", " ", 
     RowBox[{"Max", "[", "diffs", "]"}]}], ";", "\n", "\t", 
    RowBox[{"maxDiff", " ", "=", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"maxDiff", " ", "\[Equal]", " ", "0"}], ",", " ", "2", ",", 
       " ", "maxDiff"}], "]"}]}], ";", "\n", "\t\t", "\n", "\t", 
    RowBox[{"colorScales", " ", "=", " ", 
     RowBox[{"{", "\n", "\t\t", 
      RowBox[{
       RowBox[{"Function", "[", 
        RowBox[{"d", ",", " ", "White"}], "]"}], ",", " ", 
       RowBox[{"(*", " ", 
        RowBox[{"states", ",", " ", 
         RowBox[{"always", " ", "white"}]}], " ", "*)"}], "\n", "\t\t", 
       RowBox[{"Function", "[", 
        RowBox[{"d", ",", " ", 
         RowBox[{"Blend", "[", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "10"}], ",", " ", 
                RowBox[{"Max", "[", "houseOfRepresentatives", "]"}]}], "}"}], 
              ",", " ", 
              RowBox[{"{", " ", 
               RowBox[{"White", ",", " ", "lightOrange"}], " ", "}"}]}], 
             "}"}], "]"}], ",", " ", "d"}], "]"}]}], "]"}], ",", " ", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{"actual", " ", "house"}], ",", " ", 
         RowBox[{"max", " ", "is", " ", "53"}]}], " ", "*)"}], "\n", "\t\t", 
       RowBox[{"Function", "[", 
        RowBox[{"d", ",", " ", 
         RowBox[{"Blend", "[", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "10"}], ",", " ", 
                RowBox[{"Max", "[", "calculatedReps", "]"}]}], "}"}], ",", 
              " ", 
              RowBox[{"{", " ", 
               RowBox[{"White", ",", " ", "darkOrange"}], " ", "}"}]}], "}"}],
             "]"}], ",", " ", "d"}], "]"}]}], "]"}], ",", " ", 
       RowBox[{"(*", " ", 
        RowBox[{"user", " ", "calculations"}], " ", "*)"}], "\n", "\t\t", 
       RowBox[{"Function", "[", 
        RowBox[{"d", ",", " ", 
         RowBox[{"Blend", "[", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "maxDiff"}], ",", " ", "0", ",", " ", 
                "maxDiff"}], "}"}], ",", " ", 
              RowBox[{"{", " ", 
               RowBox[{"green", ",", " ", "White", ",", " ", "purple"}], " ", 
               "}"}]}], "}"}], "]"}], ",", " ", "d"}], "]"}]}], "]"}]}], " ", 
      
      RowBox[{"(*", " ", 
       RowBox[{"diffs", ",", " ", 
        RowBox[{"green", " ", "for", " ", "losing", " ", "seats"}], ",", " ", 
        
        RowBox[{"purple", " ", "for", " ", "gaining"}]}], " ", "*)"}], "\t", 
      "\n", "\t", "}"}]}], ";", "\n", "\t", "\n", "\t", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
      "convert", " ", "the", " ", "seating", " ", "data", " ", "to", " ", 
       "items", " ", "for", " ", "grid"}], ",", " ", 
      RowBox[{"adding", " ", "header", " ", "and", " ", "footer"}]}], " ", 
     "*)"}], "\t", "\n", "\t", 
    RowBox[{"dataAssociations", " ", "=", " ", 
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{"AssociationThread", "[", 
        RowBox[{"stateNames", ",", " ", "stateNames"}], "]"}], ",", " ", 
       "houseOfRepresentatives", ",", " ", "calculatedReps", ",", " ", 
       "diffs"}], " ", "}"}]}], ";", "\n", "\n", "\t", 
    RowBox[{"heightCell", " ", "=", " ", "1"}], ";", "\n", "\t", 
    RowBox[{"widthCell", " ", "=", " ", "2"}], ";", "\n", "\t", "\n", "\t", 
    RowBox[{"(*", " ", 
     RowBox[{
     "convert", " ", "each", " ", "cell", " ", "to", " ", "an", " ", "Item", 
      " ", "for", " ", "easier", " ", "formatting"}], " ", "*)"}], "\n", "\t", 
    RowBox[{
     RowBox[{"itemizeCell", "[", 
      RowBox[{"{", " ", 
       RowBox[{"dataAssociation_", ",", " ", "colorScale_"}], " ", "}"}], 
      "]"}], " ", ":=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Item", "[", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"dataAssociation", "[", "#", "]"}], ",", " ", 
           RowBox[{"FontSize", "\[Rule]", "12"}], ",", " ", 
           RowBox[{"TextAlignment", "\[Rule]", "Center"}]}], "]"}], ",", "\n",
          "\t\t", 
         RowBox[{"Background", "->", 
          RowBox[{"colorScale", "[", 
           RowBox[{"dataAssociation", "[", "#", "]"}], "]"}]}], ",", "\n", 
         "\t\t", 
         RowBox[{"ItemSize", "->", 
          RowBox[{"{", " ", 
           RowBox[{"widthCell", ",", " ", "heightCell"}], " ", "}"}]}], ",", 
         "\n", "\t\t", 
         RowBox[{"Alignment", " ", "\[Rule]", " ", "Bottom"}]}], "]"}], "&"}],
       "\n", "\t", "/@", " ", "stateNames"}]}], ";", "\n", "\t", "\n", "\t", 
    RowBox[{"itemizedRows", " ", "=", " ", 
     RowBox[{"Map", "[", "\n", "\t\t", 
      RowBox[{"itemizeCell", ",", "\n", "\t\t", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", " ", 
         RowBox[{"dataAssociations", ",", " ", "colorScales"}], " ", "}"}], 
        "]"}]}], "\n", "\t", "]"}]}], ";", "\n", "\t", "\n", "\t", 
    RowBox[{"totals", " ", "=", " ", 
     RowBox[{"{", " ", 
      RowBox[{"\"\<Total\>\"", ",", " ", 
       RowBox[{"Total", "@", "houseOfRepresentatives"}], ",", " ", 
       RowBox[{"Total", "@", "calculatedReps"}], ",", " ", 
       RowBox[{"Total", "@", "diffs"}]}], " ", "}"}]}], ";", "\n", "\t", 
    RowBox[{
     RowBox[{
      RowBox[{"Append", "[", 
       RowBox[{
        RowBox[{"itemizedRows", "[", 
         RowBox[{"[", "#", "]"}], "]"}], ",", " ", 
        RowBox[{"Item", "[", 
         RowBox[{
          RowBox[{"totals", "[", 
           RowBox[{"[", "#", "]"}], "]"}], ",", " ", 
          RowBox[{"ItemSize", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"2", " ", "*", " ", "widthCell"}], ",", " ", 
             "heightCell"}], "}"}]}]}], "]"}]}], "]"}], "&"}], " ", "/@", " ", 
     RowBox[{"Range", "[", "4", "]"}]}]}], "\n", ")"}]}]], "Code",
 CellChangeTimes->{{3.743993136609664*^9, 3.743993202368743*^9}, {
   3.743993304986496*^9, 3.7439933456610403`*^9}, {3.743993440748426*^9, 
   3.743993462556728*^9}, {3.744012979532835*^9, 3.744013017866235*^9}, {
   3.744013059201119*^9, 3.74401310784264*^9}, {3.7440131480563087`*^9, 
   3.744013253827352*^9}, {3.74401361870009*^9, 3.7440136227702703`*^9}, {
   3.7440136562424927`*^9, 3.744013854427471*^9}, {3.7440139105135098`*^9, 
   3.744013924129532*^9}, {3.7440140090705976`*^9, 3.7440140098369617`*^9}, {
   3.7440140663732967`*^9, 3.74401472799924*^9}, {3.7440147813964777`*^9, 
   3.7440151537049437`*^9}, {3.744015184460951*^9, 3.7440151862570763`*^9}, {
   3.7440153594543257`*^9, 3.744015497951551*^9}, {3.744015538345718*^9, 
   3.7440156442426357`*^9}, {3.744015674268971*^9, 3.7440156814265137`*^9}, {
   3.744015911324431*^9, 3.744016008967353*^9}, {3.7440169026283293`*^9, 
   3.7440175801017637`*^9}, {3.744017645683721*^9, 3.744017780199278*^9}, {
   3.744017868124217*^9, 3.7440178766248713`*^9}, {3.744017932416861*^9, 
   3.7440180619546556`*^9}, {3.7440181305478783`*^9, 
   3.7440181683598824`*^9}, {3.74401828132137*^9, 3.744018292524219*^9}, {
   3.744018327431631*^9, 3.7440183277870617`*^9}, {3.744020261669175*^9, 
   3.744020275772187*^9}, {3.744020351581192*^9, 3.7440204297674294`*^9}, {
   3.74402046983218*^9, 3.7440204935984163`*^9}, {3.744020524284574*^9, 
   3.744020694698381*^9}, {3.744020754777182*^9, 3.7440209485086403`*^9}, {
   3.744021029193266*^9, 3.7440210499998703`*^9}, {3.7440212707303877`*^9, 
   3.744021285496921*^9}, {3.744021352790016*^9, 3.744021408994347*^9}, {
   3.7440233396735487`*^9, 3.744023348902801*^9}, {3.744023380656886*^9, 
   3.744023418772709*^9}, {3.744023525437282*^9, 3.744023616313375*^9}, {
   3.744023654762031*^9, 3.744023760485911*^9}, {3.74402379385459*^9, 
   3.744023867201549*^9}, {3.744024004652671*^9, 3.744024006520659*^9}, {
   3.744024041828887*^9, 3.744024245229113*^9}, {3.744024289263735*^9, 
   3.744024484991579*^9}, {3.7440245390936737`*^9, 3.744024569972492*^9}, {
   3.7440246559067287`*^9, 3.7440247485746202`*^9}, {3.7440248336144047`*^9, 
   3.7440248535919437`*^9}, {3.744024890333991*^9, 3.744024896201376*^9}, {
   3.744024976041501*^9, 3.744024990257041*^9}, {3.74402512011626*^9, 
   3.7440251258974524`*^9}, {3.744025165690345*^9, 3.744025246591634*^9}, {
   3.7440253359709673`*^9, 3.744025367030582*^9}, {3.744025423055463*^9, 
   3.744025448794685*^9}, 3.744026599261344*^9, {3.744026633253059*^9, 
   3.744026739521717*^9}, {3.7440267872158833`*^9, 3.744026791173843*^9}, {
   3.744026826330113*^9, 3.744026865531126*^9}, {3.744026897299856*^9, 
   3.744026909459032*^9}, {3.744026940268087*^9, 3.744026955225175*^9}, {
   3.7440269853783417`*^9, 3.744027000462799*^9}, {3.744027083886262*^9, 
   3.744027140255294*^9}, {3.744027265146051*^9, 3.74402727513277*^9}, {
   3.744027306711054*^9, 3.744027322168826*^9}, {3.744027370471142*^9, 
   3.744027507224139*^9}, {3.7440275491139402`*^9, 3.744027570858727*^9}, {
   3.7440276598312902`*^9, 3.7440276988598213`*^9}, {3.744027943446394*^9, 
   3.7440279547621603`*^9}, {3.744028011553995*^9, 3.744028190155534*^9}, {
   3.744028306912445*^9, 3.744028628204846*^9}, {3.744028668693961*^9, 
   3.744028677170279*^9}, {3.744028761026072*^9, 3.744028797267692*^9}, {
   3.7440288309596786`*^9, 3.744028832207131*^9}, {3.7440289040590076`*^9, 
   3.7440290308337717`*^9}, {3.744029260918185*^9, 3.744029490754766*^9}, {
   3.744049218923387*^9, 3.744049255305418*^9}, {3.744049356952466*^9, 
   3.744049377289667*^9}, {3.744049409805526*^9, 3.744049421270101*^9}, {
   3.7440495033868313`*^9, 3.744049516902096*^9}, {3.744049555222273*^9, 
   3.744049619614808*^9}, {3.744049741121107*^9, 3.74404988453503*^9}, {
   3.744049925629941*^9, 3.744050027848472*^9}, {3.744050064314643*^9, 
   3.7440501220707817`*^9}, {3.7440506017630157`*^9, 3.744050618694166*^9}, {
   3.744052917204465*^9, 3.7440529212244463`*^9}, {3.744053167307032*^9, 
   3.744053196559177*^9}, {3.7440533006714773`*^9, 3.7440533735348063`*^9}, {
   3.7440534353162003`*^9, 3.744053453585314*^9}, {3.7440535028721533`*^9, 
   3.744053610537633*^9}, {3.744053727634794*^9, 3.7440538400968523`*^9}, {
   3.74405392628557*^9, 3.744053934081587*^9}, {3.7440561143613663`*^9, 
   3.7440564350633993`*^9}, {3.744056643473873*^9, 3.744056726189127*^9}, {
   3.744056761982168*^9, 3.744057000479595*^9}, {3.744057048605632*^9, 
   3.744057087876856*^9}, {3.7440571210065613`*^9, 3.7440571368889217`*^9}, {
   3.7440571712984*^9, 3.744057247158451*^9}, {3.7440573075835953`*^9, 
   3.744057314026559*^9}, {3.7440573646430607`*^9, 3.744057412935669*^9}, {
   3.744057456367882*^9, 3.744057659257422*^9}, {3.7440577130669403`*^9, 
   3.744057713455557*^9}, {3.744057744210017*^9, 3.74405775988501*^9}, {
   3.744057790118469*^9, 3.744057828267727*^9}, {3.74405787130695*^9, 
   3.744057892522069*^9}, {3.7440579711549177`*^9, 3.744058039537129*^9}, {
   3.74405811108605*^9, 3.7440581801989393`*^9}, {3.744058393223281*^9, 
   3.744058479967607*^9}, {3.744058552489706*^9, 3.744058621558366*^9}, {
   3.744058665320877*^9, 3.744058672165031*^9}, {3.744058771357194*^9, 
   3.744058810875622*^9}, {3.744058843642333*^9, 3.744059148946209*^9}, {
   3.7440591926445103`*^9, 3.744059197512246*^9}, {3.744060393953253*^9, 
   3.74406041922504*^9}, {3.7440606143534613`*^9, 3.744060759342545*^9}, {
   3.7440607952749243`*^9, 3.744060814677824*^9}, {3.744060845274571*^9, 
   3.7440610561234617`*^9}, {3.74406119537819*^9, 3.744061246357065*^9}, {
   3.744069879462039*^9, 3.74407015344372*^9}, {3.7440704150681953`*^9, 
   3.74407046202621*^9}, {3.744070518297996*^9, 3.744070535826478*^9}, {
   3.744071208550014*^9, 3.744071219764921*^9}, {3.7440712733243*^9, 
   3.7440712937200317`*^9}, {3.744071331792918*^9, 3.744071345817355*^9}, {
   3.744071402405455*^9, 3.744071417030469*^9}, {3.7440718778896*^9, 
   3.744071914823516*^9}, {3.744071972037532*^9, 3.744071978877534*^9}, {
   3.744072492926167*^9, 3.744072540861659*^9}, {3.74407258215443*^9, 
   3.7440725918874598`*^9}, {3.744072700514937*^9, 3.744072740461485*^9}, {
   3.74407285423634*^9, 3.7440729380641527`*^9}, {3.744072970757428*^9, 
   3.744072973159238*^9}, {3.7440730039117727`*^9, 3.744073008324518*^9}, {
   3.744073052390801*^9, 3.744073083602602*^9}, {3.744073128804081*^9, 
   3.744073164802761*^9}, {3.744074098767021*^9, 3.74407414445098*^9}, 
   3.744074175413199*^9, {3.744074301135707*^9, 3.74407449297901*^9}, {
   3.744074542359723*^9, 3.7440745628859386`*^9}, {3.744074593940098*^9, 
   3.7440747954706697`*^9}, {3.7440748336081257`*^9, 
   3.7440748636504517`*^9}, {3.744074916797426*^9, 3.74407495269715*^9}, {
   3.744074998633462*^9, 3.74407504198326*^9}, {3.744075122294326*^9, 
   3.744075127098668*^9}, {3.744075170428989*^9, 3.7440752324590397`*^9}, {
   3.744075273130457*^9, 3.744075406219585*^9}, {3.744075456283654*^9, 
   3.744075474125557*^9}, {3.7440755138281317`*^9, 3.744075584914665*^9}, {
   3.744075636038218*^9, 3.744075707627842*^9}, {3.7440757608237753`*^9, 
   3.7440758108180637`*^9}, {3.744075857031158*^9, 3.744075939617693*^9}, {
   3.744076098740439*^9, 3.7440761290836077`*^9}, {3.744076231137775*^9, 
   3.744076248343981*^9}, {3.7440762872898083`*^9, 3.744076455131021*^9}, 
   3.744076574291808*^9, {3.7440766264230957`*^9, 3.744076709467814*^9}, {
   3.744076793122933*^9, 3.744076939868889*^9}, {3.744076989789422*^9, 
   3.744077056631627*^9}, {3.7440770895451107`*^9, 3.7440771729166822`*^9}, {
   3.744077224621233*^9, 3.744077227149173*^9}, {3.7440775156688957`*^9, 
   3.744077517275898*^9}, {3.744077547551016*^9, 3.744077654239224*^9}, {
   3.744077689461939*^9, 3.74407775763536*^9}, {3.744077962217237*^9, 
   3.744078004365378*^9}, {3.744078132984831*^9, 3.7440782256641693`*^9}, {
   3.744078279781752*^9, 3.744078585978457*^9}, {3.744078649908287*^9, 
   3.7440788654668007`*^9}, {3.744078918377695*^9, 3.744078931849547*^9}, {
   3.744079065749487*^9, 3.744079174760992*^9}, {3.744079209122745*^9, 
   3.744079222572547*^9}, {3.7440792799512653`*^9, 3.744079349802299*^9}, {
   3.744079414165391*^9, 3.744079416055863*^9}, {3.744079477993582*^9, 
   3.74407949849807*^9}, {3.744079553455264*^9, 3.744079582500662*^9}, {
   3.744079619557136*^9, 3.744079627613998*^9}, {3.744079661893046*^9, 
   3.7440797376578093`*^9}, {3.744079778746442*^9, 3.744079799559306*^9}, {
   3.744079834528206*^9, 3.744079862791133*^9}, {3.744079896745761*^9, 
   3.744079921823729*^9}, {3.7440799639619827`*^9, 3.74408000183132*^9}, {
   3.744080045256585*^9, 3.744080136338625*^9}, {3.744080180731263*^9, 
   3.744080200546067*^9}, {3.744080255905574*^9, 3.74408030028794*^9}, {
   3.744080357989668*^9, 3.744080403269376*^9}, {3.744080633325835*^9, 
   3.744080712185472*^9}, 3.744082344131093*^9, {3.7440823821622972`*^9, 
   3.744082494342862*^9}, {3.744082571743868*^9, 3.744082572675707*^9}, {
   3.744082607085649*^9, 3.7440826234598503`*^9}, {3.7440827384596777`*^9, 
   3.744082755032833*^9}, {3.744082793974813*^9, 3.744082829084976*^9}, {
   3.744082914484955*^9, 3.7440829167130823`*^9}, 3.744082963227532*^9, {
   3.744083016373178*^9, 3.744083185726406*^9}, {3.744083221835157*^9, 
   3.744083262528089*^9}, {3.7440832999624777`*^9, 3.744083348754073*^9}, {
   3.74408338076674*^9, 3.744083429108428*^9}, {3.744083503665543*^9, 
   3.744083567001279*^9}, {3.744083642253166*^9, 3.7440836458284597`*^9}, {
   3.744083728797182*^9, 3.7440837701169167`*^9}, {3.7440838524878798`*^9, 
   3.744083921437167*^9}, {3.744083959378622*^9, 3.7440839699138327`*^9}, {
   3.744084010922162*^9, 3.744084023066312*^9}, {3.7440841506477623`*^9, 
   3.744084247473484*^9}, {3.744084279330913*^9, 3.7440843925009604`*^9}, {
   3.74408445414282*^9, 3.744084461900573*^9}, {3.744084527409294*^9, 
   3.744084531202557*^9}, 3.7440846169193487`*^9, 3.744084696878211*^9, {
   3.7440847561271772`*^9, 3.744084757316387*^9}, {3.744084804066052*^9, 
   3.7440848320329847`*^9}, {3.744084953290998*^9, 3.744084992450726*^9}, {
   3.7440850236751213`*^9, 3.744085049800816*^9}, {3.7440853192318287`*^9, 
   3.744085390522829*^9}, 3.744085421895422*^9, {3.744085478422834*^9, 
   3.7440854825088053`*^9}, {3.744085512627838*^9, 3.744085653304196*^9}, {
   3.7440856947204237`*^9, 3.7440857162794447`*^9}, {3.744085780734455*^9, 
   3.744085803202259*^9}, 3.744085847796739*^9, {3.744085887222986*^9, 
   3.744085913558033*^9}, {3.744085973862629*^9, 3.744085982709345*^9}, {
   3.744086020629773*^9, 3.744086085409257*^9}, {3.744086228750128*^9, 
   3.744086230564834*^9}, {3.74408627601127*^9, 3.744086420314135*^9}, {
   3.744086505712042*^9, 3.74408653115547*^9}, {3.7440866567147837`*^9, 
   3.744086695498681*^9}, {3.7440868465850563`*^9, 3.744086847552911*^9}, {
   3.744087792157989*^9, 3.744087798092333*^9}, {3.744108409229774*^9, 
   3.744108503826808*^9}, 3.7441085517251797`*^9, {3.744108623944727*^9, 
   3.744108628207511*^9}, {3.744109325148775*^9, 3.74410936893578*^9}, {
   3.744109477406899*^9, 3.744109524235972*^9}, {3.7441095880078917`*^9, 
   3.7441097648190327`*^9}, {3.7441098065345078`*^9, 3.744109882616889*^9}, {
   3.744109926951844*^9, 3.74411010584317*^9}, {3.744110295964768*^9, 
   3.7441103766011753`*^9}, {3.744110409960676*^9, 3.744110430463661*^9}, {
   3.7441105178314*^9, 3.744110599818926*^9}, {3.744110670411726*^9, 
   3.74411068218478*^9}, {3.744110738345004*^9, 3.744110745896323*^9}, {
   3.744110855012108*^9, 3.7441108752667503`*^9}, {3.7441109235621223`*^9, 
   3.744110925332383*^9}, {3.744110964680519*^9, 3.744110965924678*^9}, {
   3.744111000821685*^9, 3.744111108689107*^9}, {3.744111166616996*^9, 
   3.744111167255911*^9}, {3.7441112486827383`*^9, 3.7441115111589947`*^9}, 
   3.744111541535377*^9, {3.7441115872178392`*^9, 3.744111718471445*^9}, {
   3.744111758733686*^9, 3.744111763782226*^9}, {3.7441118096235847`*^9, 
   3.744111881066888*^9}, {3.744121458304872*^9, 3.7441214727892237`*^9}, {
   3.7441215072294083`*^9, 3.744121517831895*^9}, {3.744126400221402*^9, 
   3.74412645588943*^9}, {3.744126546343013*^9, 3.7441266211483917`*^9}, {
   3.744126684033428*^9, 3.7441266871815453`*^9}, {3.7441272624568977`*^9, 
   3.744127271136688*^9}, 3.744127302133005*^9, {3.7441275623935137`*^9, 
   3.7441276085793467`*^9}, {3.744127655293394*^9, 3.7441278271187773`*^9}, {
   3.744127946799966*^9, 3.744127967225256*^9}, {3.744127998649501*^9, 
   3.744128037083528*^9}, {3.744128074776931*^9, 3.744128080264216*^9}, {
   3.744128116030684*^9, 3.744128368069976*^9}, {3.744129211607378*^9, 
   3.744129219426332*^9}, {3.744129469933872*^9, 3.744129499459691*^9}, {
   3.744129530669015*^9, 3.7441297632909203`*^9}, {3.744129821987301*^9, 
   3.744129843023869*^9}, {3.744129896094692*^9, 3.744129899645851*^9}, {
   3.744129950122341*^9, 3.744130270690881*^9}, 3.744130305133122*^9, 
   3.744130425954995*^9, {3.744130501900255*^9, 3.744130515714376*^9}, {
   3.744130571962308*^9, 3.744130588449185*^9}, {3.744130640375698*^9, 
   3.744130707156621*^9}, {3.7441308109926443`*^9, 3.744130820713355*^9}, {
   3.744131558342971*^9, 3.744131663057424*^9}, {3.744131724073491*^9, 
   3.744131760689578*^9}, {3.744131790759514*^9, 3.744131889943774*^9}, {
   3.744131921722508*^9, 3.7441319726155233`*^9}, {3.7441320118234453`*^9, 
   3.744132049620504*^9}, {3.744133631107006*^9, 3.744133649663664*^9}, {
   3.744135413755693*^9, 3.7441355421730003`*^9}, {3.744141673661158*^9, 
   3.744141680787219*^9}, {3.744141727325124*^9, 3.744141752770267*^9}, {
   3.744142138111442*^9, 3.744142147358383*^9}, {3.744142793611261*^9, 
   3.744142803274979*^9}, 3.7441434150561857`*^9, {3.744143512690431*^9, 
   3.7441435167566853`*^9}, {3.744143959065691*^9, 3.74414397917383*^9}, {
   3.744144124280794*^9, 3.744144300774136*^9}, {3.7441444558890257`*^9, 
   3.74414448622234*^9}, {3.744145656529223*^9, 3.744145672545381*^9}, 
   3.7441458139717703`*^9, {3.744146438234798*^9, 3.744146443524542*^9}, {
   3.744146543837653*^9, 3.744146548102644*^9}, {3.744147029262437*^9, 
   3.7441470473279552`*^9}, {3.744147084549436*^9, 3.744147148705517*^9}, {
   3.744147268656513*^9, 3.744147269206625*^9}, 3.744147467959993*^9, {
   3.7442425448724337`*^9, 3.744242549745607*^9}, {3.744242684438643*^9, 
   3.7442426905895*^9}, {3.7442427869108467`*^9, 3.7442428707683897`*^9}, {
   3.744242908908462*^9, 3.744242969379912*^9}, {3.744243081069425*^9, 
   3.7442430830350103`*^9}, 3.7442433462209377`*^9, {3.744243405225874*^9, 
   3.7442436458168707`*^9}, {3.7442436761990423`*^9, 3.744243708183157*^9}, {
   3.7442440638405933`*^9, 3.744244181775351*^9}, {3.744244304710395*^9, 
   3.744244310691914*^9}, 3.744244449082279*^9, {3.744244696049246*^9, 
   3.7442447796274433`*^9}, {3.744244817468384*^9, 3.744244873650305*^9}, {
   3.7442449108282824`*^9, 3.744244938303009*^9}, {3.7442449717218437`*^9, 
   3.744245025373399*^9}, {3.74424516626604*^9, 3.744245189167502*^9}, 
   3.744245233199929*^9},
 CellLabel->
  "In[297]:=",ExpressionUUID->"3d955129-d597-46a2-bfad-56335a3c4e77"],

Cell[BoxData[
 RowBox[{
  RowBox[{"horizontalGrid", "[", 
   RowBox[{"rows_", ",", " ", 
    RowBox[{"perRow_:", "13"}]}], "]"}], " ", ":=", " ", 
  RowBox[{"(", "\n", "\t", 
   RowBox[{"(*", " ", 
    RowBox[{"build", " ", "rows", " ", "of", " ", "grids"}], " ", "*)"}], 
   "\n", "\t", 
   RowBox[{
    RowBox[{"headers", " ", "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Item", "[", 
        RowBox[{"#", ",", " ", 
         RowBox[{"Alignment", " ", "->", " ", "Right"}], ",", " ", 
         RowBox[{"ItemSize", "->", 
          RowBox[{"{", 
           RowBox[{"4", ",", " ", "1"}], "}"}]}]}], "]"}], "&"}], " ", "/@", 
      " ", 
      RowBox[{"{", " ", 
       RowBox[{
       "\"\<state\>\"", ",", " ", "\"\<Actual\>\"", ",", " ", "\"\<Yours\>\"",
         ",", " ", "\"\<delta\>\""}], " ", "}"}]}]}], ";", "\n", "\t", 
    RowBox[{"parts", " ", "=", " ", 
     RowBox[{"First", "@", 
      RowBox[{"Partition", "[", 
       RowBox[{"rows", ",", " ", 
        RowBox[{"{", " ", 
         RowBox[{"4", ",", " ", 
          RowBox[{"UpTo", "@", "perRow"}]}], " ", "}"}]}], "]"}]}]}], ";", 
    "\n", "\t", 
    RowBox[{"headerRows", " ", "=", " ", 
     RowBox[{"Map", "[", 
      RowBox[{"Flatten", ",", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"{", " ", 
           RowBox[{"headers", ",", " ", "#"}], " ", "}"}], "]"}], "&"}], " ", 
        "/@", " ", "parts"}], ",", " ", 
       RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\n", "\t", 
    RowBox[{"Column", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Grid", "[", 
         RowBox[{"#", ",", " ", 
          RowBox[{"Frame", " ", "->", " ", "All"}], ",", " ", 
          RowBox[{"ItemSize", "->", "All"}], ",", " ", 
          RowBox[{"Spacings", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"0.2", ",", " ", "0.8"}], "}"}]}]}], "]"}], "&"}], " ", "/@",
        " ", "headerRows"}], ",", " ", 
      RowBox[{"Spacings", " ", "\[Rule]", " ", 
       RowBox[{"-", "0.1"}]}]}], "]"}]}], "\n", ")"}]}]], "Code",
 CellChangeTimes->{{3.744242999769828*^9, 3.744243072231621*^9}, 
   3.74424313083792*^9, {3.744243257553597*^9, 3.744243281713904*^9}, {
   3.74424333624921*^9, 3.74424339342587*^9}, {3.744243526011675*^9, 
   3.744243526203367*^9}, {3.744243725061249*^9, 3.744243772218943*^9}, 
   3.744243833658001*^9, {3.744244334763462*^9, 3.74424434823361*^9}, {
   3.74424450571772*^9, 3.7442445115916843`*^9}, {3.7442445586503*^9, 
   3.744244582075495*^9}, {3.744244652233251*^9, 3.7442446879273148`*^9}, {
   3.7442452635491467`*^9, 3.74424530727571*^9}, {3.744245580228607*^9, 
   3.744245580929965*^9}, {3.744246073658639*^9, 3.744246076055422*^9}, {
   3.744246237807122*^9, 3.74424624887078*^9}},
 CellLabel->
  "In[298]:=",ExpressionUUID->"7e0cdd79-be9b-433c-ace1-779c50317168"],

Cell[CellGroupData[{

Cell["Okay, time to test it!", "Subsection",
 CellChangeTimes->{{3.744245384399922*^9, 
  3.744245391094357*^9}},ExpressionUUID->"e9d2e25d-7f8c-4b50-a8cd-\
8735cfcf8887"],

Cell["\<\
For a test case, let\[CloseCurlyQuote]s start with making sure we get the \
same results as we expect under current law.\
\>", "Text",
 CellChangeTimes->{{3.744241310198966*^9, 3.744241338222033*^9}, {
  3.744241375726438*^9, 3.7442414131874857`*^9}, {3.744245401422257*^9, 
  3.744245404879631*^9}, {3.74424545786751*^9, 
  3.74424545873388*^9}},ExpressionUUID->"6fe0f407-43d0-4395-9d9b-\
2c42200d8b1d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"gutCheck", " ", "=", " ", 
   RowBox[{"calculateAllocations", "[", 
    RowBox[{"435", ",", " ", "1", ",", " ", "0"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"horizontalGrid", "[", 
  RowBox[{"makeRows", "[", "gutCheck", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7442414173723717`*^9, 3.744241426259288*^9}, {
  3.7442454293198643`*^9, 3.744245429717512*^9}},
 CellLabel->
  "In[299]:=",ExpressionUUID->"a47fb355-bf5c-41c8-989c-f70ed9e3afc4"],

Cell["\<\
Then we\[CloseCurlyQuote]ll try factoring in the full electoral votes in the \
allotment and then subtract them at the end.\
\>", "Text",
 CellChangeTimes->{
  3.74424546189229*^9},ExpressionUUID->"66cab87a-47e0-4f6a-b40c-146602d682cc"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"factorInElectors", " ", "=", " ", 
   RowBox[{"calculateAllocations", "[", 
    RowBox[{"435", ",", " ", "3", ",", " ", 
     RowBox[{"-", "2"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"horizontalGrid", "[", 
  RowBox[{"makeRows", "[", "factorInElectors", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.744241296104702*^9, 3.744241305799232*^9}, {
   3.744241347471376*^9, 3.7442413518954144`*^9}, {3.7442414448366327`*^9, 
   3.744241447970665*^9}, {3.744245438166306*^9, 3.744245438533372*^9}, 
   3.744245470687725*^9, 3.744245546347863*^9},
 CellLabel->
  "In[301]:=",ExpressionUUID->"506f6e34-ba00-4782-a0a7-d733184cc3ba"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Let\[CloseCurlyQuote]s map it too", "Section",
 CellChangeTimes->{{3.7442461302881536`*^9, 
  3.7442461467423964`*^9}},ExpressionUUID->"a451c960-24c9-464f-8cd7-\
32fe62b165b2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"mapDiffs", "[", "calculatedReps_", "]"}], " ", ":=", " ", 
  RowBox[{"(", "\n", "\t", 
   RowBox[{
    RowBox[{"entityDiffs", " ", "=", " ", 
     RowBox[{"KeyMap", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"statesByAbbreviation", "[", "#", "]"}], "[", 
         "\"\<entity\>\"", "]"}], "&"}], ",", " ", 
       RowBox[{"getDiffs", "[", "calculatedReps", "]"}]}], "]"}]}], ";", "\n",
     "\t", 
    RowBox[{"green", " ", "=", " ", 
     RowBox[{"RGBColor", "[", "\"\<#47C045\>\"", "]"}]}], ";", "\n", "\t", 
    RowBox[{"purple", " ", "=", " ", 
     RowBox[{"RGBColor", "[", "\"\<#E165FA\>\"", "]"}]}], ";", "\n", "\t", 
    RowBox[{"max", " ", "=", " ", 
     RowBox[{"Max", "[", "entityDiffs", "]"}]}], ";", "\n", "\t", 
    RowBox[{"max", " ", "=", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"max", " ", "\[Equal]", " ", "0"}], ",", " ", "2", ",", " ", 
       "max"}], "]"}]}], ";", "\n", "\t", "\n", "\t", 
    RowBox[{"colorScheme", " ", "=", " ", 
     RowBox[{"Function", "[", 
      RowBox[{"d", ",", " ", 
       RowBox[{"Blend", "[", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "max"}], ",", " ", "0", ",", " ", "max"}], "}"}], 
            ",", " ", 
            RowBox[{"{", " ", 
             RowBox[{"green", ",", " ", "White", ",", " ", "purple"}], " ", 
             "}"}]}], "}"}], "]"}], ",", " ", "d"}], "]"}]}], "]"}]}], ";", 
    "\n", "\t", "\n", "\t", 
    RowBox[{"contentinal", " ", "=", " ", 
     RowBox[{"GeoRegionValuePlot", "[", 
      RowBox[{"entityDiffs", ",", " ", 
       RowBox[{"GeoRange", "\[Rule]", 
        TemplateBox[{"\"United States\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"UnitedStates\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"UnitedStates\\\"]\"","\"country\""},
         "Entity"]}], ",", " ", 
       RowBox[{"ImageSize", "\[Rule]", "499"}], ",", " ", 
       RowBox[{"PlotLegends", "\[Rule]", "None"}], ",", " ", 
       RowBox[{"ColorFunction", "\[Rule]", "colorScheme"}], ",", " ", 
       RowBox[{"ColorFunctionScaling", " ", "\[Rule]", " ", "False"}]}], 
      "]"}]}], ";", "\n", "\t", 
    RowBox[{"ak", " ", "=", " ", 
     RowBox[{"GeoRegionValuePlot", "[", 
      RowBox[{"entityDiffs", ",", " ", 
       RowBox[{"GeoRange", "\[Rule]", 
        TemplateBox[{"\"Alaska, United States\"",RowBox[{"Entity", "[", 
            RowBox[{"\"AdministrativeDivision\"", ",", 
              RowBox[{"{", 
                RowBox[{"\"Alaska\"", ",", "\"UnitedStates\""}], "}"}]}], 
            "]"}],"\"Entity[\\\"AdministrativeDivision\\\", {\\\"Alaska\\\", \
\\\"UnitedStates\\\"}]\"","\"administrative division\""},
         "Entity"]}], ",", " ", 
       RowBox[{"ImageSize", "\[Rule]", "249"}], ",", " ", 
       RowBox[{"PlotLegends", "\[Rule]", "None"}], ",", " ", 
       RowBox[{"ColorFunction", "\[Rule]", "colorScheme"}], ",", " ", 
       RowBox[{"ColorFunctionScaling", " ", "\[Rule]", " ", "False"}]}], 
      "]"}]}], ";", "\n", "\t", 
    RowBox[{"hi", " ", "=", " ", 
     RowBox[{"GeoRegionValuePlot", "[", 
      RowBox[{"entityDiffs", ",", " ", 
       RowBox[{"GeoRange", "\[Rule]", 
        TemplateBox[{"\"Hawaii, United States\"",RowBox[{"Entity", "[", 
            RowBox[{"\"AdministrativeDivision\"", ",", 
              RowBox[{"{", 
                RowBox[{"\"Hawaii\"", ",", "\"UnitedStates\""}], "}"}]}], 
            "]"}],"\"Entity[\\\"AdministrativeDivision\\\", {\\\"Hawaii\\\", \
\\\"UnitedStates\\\"}]\"","\"administrative division\""},
         "Entity"]}], ",", " ", 
       RowBox[{"GeoRangePadding", " ", "->", " ", 
        RowBox[{"{", 
         RowBox[{
          TemplateBox[{"30","\"km\"","kilometers","\"Kilometers\""},
           "Quantity"], ",", " ", 
          TemplateBox[{"50","\"km\"","kilometers","\"Kilometers\""},
           "Quantity"]}], "}"}]}], ",", " ", 
       RowBox[{"ImagePadding", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"5", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ",", " ", 
       RowBox[{"GeoRangePadding", " ", "->", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Scaled", "[", "0", "]"}], ",", " ", "None"}], "}"}]}], ",",
        " ", 
       RowBox[{"ImageSize", "\[Rule]", "250"}], ",", " ", 
       RowBox[{"PlotLegends", "\[Rule]", "None"}], ",", " ", 
       RowBox[{"ColorFunction", "\[Rule]", "colorScheme"}], ",", " ", 
       RowBox[{"ColorFunctionScaling", " ", "\[Rule]", " ", "False"}]}], 
      "]"}]}], ";", "\n", "\t", 
    RowBox[{"Column", "[", 
     RowBox[{"{", "\n", "\t\t", 
      RowBox[{
       RowBox[{"Row", "[", 
        RowBox[{"{", "\n", "\t\t\t", 
         RowBox[{
          RowBox[{"Column", "[", 
           RowBox[{"{", "\n", "\t\t\t\t", 
            RowBox[{
             RowBox[{"Row", "[", 
              RowBox[{
               RowBox[{"{", " ", "contentinal", " ", "}"}], ",", " ", 
               RowBox[{"ImageSize", "\[Rule]", "500"}]}], "]"}], ",", "\n", 
             "\t\t\t\t", 
             RowBox[{"Row", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"ak", ",", "hi"}], "}"}], ",", " ", 
               RowBox[{"ImageSize", "\[Rule]", "500"}]}], "]"}]}], "\n", 
            "\t\t\t", "}"}], "]"}], ",", "\n", "\t\t\t", 
          RowBox[{"BarLegend", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"colorScheme", ",", " ", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "max"}], ",", " ", "max"}], "}"}]}], "}"}], ",", 
            " ", 
            RowBox[{"LegendMarkerSize", "\[Rule]", "300"}]}], "]"}]}], "\n", 
         "\t\t", "}"}], "]"}], ",", "\n", "\t\t", 
       RowBox[{"horizontalGrid", "[", 
        RowBox[{
         RowBox[{"makeRows", "[", "calculatedReps", "]"}], ",", " ", "17"}], 
        "]"}]}], "\n", "\t", "}"}], "]"}]}], "\n", ")"}]}]], "Code",
 CellChangeTimes->{{3.744238118964984*^9, 3.744238247752222*^9}, {
   3.7442383012916803`*^9, 3.744238322390594*^9}, {3.744238353513257*^9, 
   3.744238672263142*^9}, {3.744238730582218*^9, 3.744238896518895*^9}, {
   3.744238930410028*^9, 3.7442391107174377`*^9}, {3.744239367617462*^9, 
   3.7442394050476007`*^9}, {3.7442394617789803`*^9, 3.744239796128927*^9}, {
   3.744239897770321*^9, 3.744239898672164*^9}, {3.744239945118609*^9, 
   3.744239967086997*^9}, {3.744240026891549*^9, 3.7442400343633947`*^9}, {
   3.744240338773942*^9, 3.744240362041986*^9}, {3.744241594619483*^9, 
   3.744241641066697*^9}, {3.744241729786578*^9, 3.744241733341523*^9}, {
   3.744246268298476*^9, 3.744246301877437*^9}, 3.744246343480814*^9, {
   3.744246379067802*^9, 3.744246451281302*^9}, {3.7442464864248123`*^9, 
   3.744246521318089*^9}, {3.744246583967404*^9, 3.744246589629998*^9}},
 CellLabel->
  "In[303]:=",ExpressionUUID->"8196e46a-cf86-47fc-992d-a8e1edb59fe8"],

Cell["\<\
Allowing for the electors benefits the larger-population states\
\>", "Text",
 CellChangeTimes->{{3.74424150210714*^9, 
  3.7442415217921658`*^9}},ExpressionUUID->"42722348-58ef-47de-b012-\
854cd0e902f2"],

Cell[BoxData[
 RowBox[{"mapDiffs", "[", "factorInElectors", "]"}]], "Input",
 CellChangeTimes->{{3.744241490138934*^9, 3.744241491057184*^9}, {
  3.744246183431313*^9, 3.7442461915627327`*^9}},
 CellLabel->
  "In[304]:=",ExpressionUUID->"a24bddc1-8386-4472-945c-8504766704d6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Analyzing the number of people per representative", "Section",
 CellChangeTimes->{{3.7440152459813766`*^9, 3.744015249971204*^9}, {
  3.744246634425827*^9, 
  3.7442466424150677`*^9}},ExpressionUUID->"a79e9998-3163-4ff4-b3b8-\
9078bb5ae4b2"],

Cell["\<\
Another way to measure the effectiveness of allocation is by measuring the \
ratio of the population to its number of representatives. We have the \
population conveniently baked in to the state data, so we\[CloseCurlyQuote]ll \
add a bar chart to the visualization.\
\>", "Text",
 CellChangeTimes->{{3.744015265731449*^9, 3.7440152672523117`*^9}, {
  3.7440152989315567`*^9, 
  3.7440153272169647`*^9}},ExpressionUUID->"7667d014-62df-4e32-91d4-\
04bfcb374b40"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"statePopulations", " ", "=", " ", 
   RowBox[{"AssociationThread", "[", "\n", "\t", 
    RowBox[{"stateAbbrs50", ",", "\n", "\t", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"statesByAbbreviation", "[", "#", "]"}], "[", 
         "\"\<population_decennial\>\"", "]"}], "[", "\"\<2010\>\"", "]"}], 
       "&"}], " ", "/@", " ", "stateAbbrs50"}]}], "\n", "]"}]}], ";"}], "\n", 

 RowBox[{
  RowBox[{
   RowBox[{"totalUSPopulation", " ", "=", " ", 
    RowBox[{"Total", "@", "statePopulations"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"won", "'"}], "t", " ", "count", " ", "DC", " ", "or", " ", "PR", 
    " ", "since", " ", "we", " ", "have", " ", "no", " ", "reps"}], " ", 
   "*)"}]}]}], "Code",
 CellChangeTimes->{{3.743971991821557*^9, 3.74397199793897*^9}, {
  3.7440157560294437`*^9, 3.744015778554976*^9}},
 CellLabel->
  "In[305]:=",ExpressionUUID->"da3b6dc3-9eff-4f11-8eea-148857aee3f8"],

Cell["Function for calculating the population per representative.", "Text",
 CellChangeTimes->{{3.744015788539606*^9, 3.744015795058226*^9}, {
  3.74401588535174*^9, 
  3.744015895727075*^9}},ExpressionUUID->"57c709a2-6f6a-40f2-8fdd-\
2bc3aea08308"],

Cell[BoxData[
 RowBox[{
  RowBox[{"peoplePerRepresentative", "[", "allocation_", "]"}], " ", ":=", 
  " ", 
  RowBox[{"(", "\n", "\t", 
   RowBox[{"perRep", " ", "=", " ", 
    RowBox[{"AssociationThread", "[", "\n", "\t\t", 
     RowBox[{"stateAbbrs50", ",", "\n", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{"Round", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"statePopulations", "[", "#", "]"}], " ", "/", " ", 
           RowBox[{"allocation", "[", "#", "]"}]}], " ", "*", " ", "1.0"}], 
         "]"}], "&"}], " ", "/@", " ", "stateAbbrs50"}]}], "\n", "\t", 
     "]"}]}], "\n", ")"}]}]], "Code",
 CellChangeTimes->{{3.7439720035811453`*^9, 3.743972012177651*^9}, {
  3.744015800771656*^9, 3.744015802658537*^9}, {3.744015856617445*^9, 
  3.7440158579853773`*^9}, {3.744248184634267*^9, 3.7442481886811543`*^9}, {
  3.74424831102143*^9, 3.744248312229082*^9}},
 CellLabel->
  "In[307]:=",ExpressionUUID->"f8735a79-8207-4cdd-bee6-b86dc1e42209"],

Cell[BoxData[
 RowBox[{
  RowBox[{"visualizeRepresentation", "[", 
   RowBox[{"allocation_", ",", " ", 
    RowBox[{"title_:", "\"\<\>\""}]}], "]"}], " ", ":=", " ", 
  RowBox[{"(", "\n", "\t", 
   RowBox[{"(*", " ", 
    RowBox[{"data", " ", "and", " ", "stats"}], " ", "*)"}], "\t", "\n", "\t", 
   RowBox[{
    RowBox[{"total", " ", "=", " ", 
     RowBox[{"Total", "@", "allocation"}]}], ";", "\n", "\t", 
    RowBox[{"ideal", " ", "=", " ", 
     RowBox[{"Round", "[", 
      RowBox[{"totalUSPopulation", " ", "/", " ", "total"}], "]"}]}], ";", 
    "\n", "\t", 
    RowBox[{"ratio", " ", "=", " ", 
     RowBox[{"peoplePerRepresentative", "[", "allocation", "]"}]}], ";", "\n",
     "\t", 
    RowBox[{"sd", " ", "=", " ", 
     RowBox[{
      RowBox[{"StandardDeviation", "[", "ratio", "]"}], " ", "*", " ", 
      "1.0"}]}], ";", "\n", "\t", 
    RowBox[{"cov", " ", "=", " ", 
     RowBox[{"sd", " ", "/", " ", 
      RowBox[{"Mean", "@", "ratio"}]}]}], ";", "\n", "\t", 
    RowBox[{"sdPrint", " ", "=", " ", 
     RowBox[{"NumberForm", "[", 
      RowBox[{
       RowBox[{"Round", "[", "sd", "]"}], ",", " ", 
       RowBox[{"DigitBlock", "\[Rule]", "3"}]}], "]"}]}], ";", "\t", "\n", 
    "\t", 
    RowBox[{"ratioWithUS", " ", "=", " ", 
     RowBox[{"Append", "[", 
      RowBox[{
       RowBox[{"peoplePerRepresentative", "[", "allocation", "]"}], ",", " ", 
       
       RowBox[{"\"\<US\>\"", " ", "\[Rule]", " ", "ideal"}]}], "]"}]}], ";", 
    "\n", "\n", "\t", 
    RowBox[{"colorScale", " ", "=", " ", 
     RowBox[{
      RowBox[{"ColorData", "[", 
       RowBox[{"\"\<Rainbow\>\"", ",", " ", 
        RowBox[{"Rescale", "[", 
         RowBox[{"#1", ",", " ", 
          RowBox[{"MinMax", "@", "ratio"}]}], "]"}]}], "]"}], "&"}]}], ";", 
    "\n", "\t", 
    RowBox[{"colorFunction", " ", "=", " ", 
     RowBox[{"Function", "[", 
      RowBox[{"v", ",", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"v", " ", "\[Equal]", " ", "ideal"}], ",", " ", "Yellow", 
         ",", " ", 
         RowBox[{"colorScale", "[", "v", "]"}]}], "]"}]}], "]"}]}], ";", 
    "\t\t", "\n", "\t", "\n", "\t", 
    RowBox[{"sorted", " ", "=", " ", 
     RowBox[{"Sort", "@", "ratioWithUS"}]}], ";", "\n", "\t\t", "\n", "\t", 
    RowBox[{"(*", " ", 
     RowBox[{"bar", " ", "chart"}], " ", "*)"}], "\t", "\n", "\t", 
    RowBox[{"chartWidth", " ", "=", " ", "900"}], ";", "\n", "\t", 
    RowBox[{"chartHeight", " ", "=", " ", "300"}], ";", "\n", "\t", 
    RowBox[{"chartAspect", " ", "=", " ", 
     RowBox[{"chartHeight", " ", "/", " ", "chartWidth"}]}], ";", "\n", "\t", 
    "\n", "\t", 
    RowBox[{"allocationWithUS", " ", "=", " ", 
     RowBox[{"Append", "[", 
      RowBox[{"allocation", ",", " ", 
       RowBox[{"\"\<US\>\"", " ", "\[Rule]", " ", "\"\<N/A\>\""}]}], "]"}]}], 
    ";", "\n", "\t\t", "\n", "\t", 
    RowBox[{"plotLabels", " ", "=", " ", 
     RowBox[{"{", "\n", "\t\t", 
      RowBox[{
       RowBox[{"{", " ", 
        RowBox[{"Style", "[", 
         RowBox[{"title", ",", " ", 
          RowBox[{"FontSize", "\[Rule]", "24"}], ",", " ", "Bold"}], "]"}], 
        " ", "}"}], ",", "\n", "\t\t", 
       RowBox[{"{", " ", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ToString", "@", "total"}], " ", "<>", " ", 
           "\"\< Seats\>\""}], ",", " ", 
          RowBox[{"FontSize", "\[Rule]", "20"}]}], "]"}], " ", "}"}], ",", 
       "\n", "\t\t", 
       RowBox[{"{", " ", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"\"\<Target: \>\"", " ", "<>", " ", 
           RowBox[{"ToString", "@", 
            RowBox[{"NumberForm", "[", 
             RowBox[{"ideal", ",", " ", 
              RowBox[{"DigitBlock", " ", "->", " ", "3"}]}], "]"}]}], " ", "<>",
            " ", "\"\< people per representative\>\""}], ",", " ", 
          RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}], " ", "}"}], ",", 
       "\n", "\t\t", 
       RowBox[{"{", " ", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"\"\<Standard Deviation: \>\"", " ", "<>", " ", 
           RowBox[{"ToString", "[", "sdPrint", "]"}]}], ",", " ", 
          RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}], " ", "}"}], ",", 
       "\n", "\t\t", 
       RowBox[{"{", " ", 
        RowBox[{"Item", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"\"\<Coefficient of Variation: \>\"", " ", "<>", " ", 
             RowBox[{"ToString", "@", "cov"}]}], ",", " ", 
            RowBox[{"FontSize", "\[Rule]", "14"}], ",", " ", "Bold"}], "]"}], 
          ",", " ", 
          RowBox[{"Background", "\[Rule]", "LightYellow"}], ",", " ", 
          RowBox[{"ItemSize", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"Automatic", ",", "2.5"}], "}"}]}], ",", " ", 
          RowBox[{"Alignment", "\[Rule]", "Center"}], ",", " ", 
          RowBox[{"Frame", " ", "\[Rule]", " ", "True"}]}], "]"}], " ", 
        "}"}]}], "\n", "\t", "}"}]}], ";", "\n", "\t\t", "\n", "\t", 
    RowBox[{"labeledData", "  ", "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Labeled", "[", 
        RowBox[{
         RowBox[{"sorted", "[", "#", "]"}], ",", " ", 
         RowBox[{"Rotate", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"#", " ", "\[Equal]", " ", "\"\<US\>\""}], ",", " ", 
               "\"\<U.S. Average\>\"", ",", " ", 
               RowBox[{"Row", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{"#", ",", " ", "Bold"}], "]"}], ",", " ", 
                  "\"\<: \>\"", ",", " ", 
                  RowBox[{"ToString", "@", 
                   RowBox[{"allocationWithUS", "[", "#", "]"}]}]}], "}"}], 
                "]"}]}], "]"}], ",", " ", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"#", " ", "\[Equal]", " ", "\"\<US\>\""}], ",", " ", 
               "Black", ",", " ", "LightGray"}], "]"}]}], "]"}], ",", " ", 
           RowBox[{"Pi", " ", "/", " ", "2"}]}], "]"}], ",", " ", "Top"}], 
        "]"}], "&"}], " ", "/@", " ", 
      RowBox[{"Keys", "@", "sorted"}]}]}], ";", "\n", "\t", 
    RowBox[{"BarChart", "[", "\n", "\t\t", 
     RowBox[{"labeledData", ",", "\n", "\t\t", 
      RowBox[{"ColorFunctionScaling", " ", "\[Rule]", " ", "False"}], ",", 
      "\t\t", "\n", "\t\t", 
      RowBox[{"ColorFunction", " ", "\[Rule]", " ", "colorFunction"}], ",", 
      "\n", "\t\t", 
      RowBox[{"ImageSize", " ", "\[Rule]", " ", "chartWidth"}], ",", "\n", 
      "\t\t", 
      RowBox[{"AspectRatio", " ", "\[Rule]", " ", "chartAspect"}], ",", "\n", 
      "\t\t", 
      RowBox[{"GridLines", " ", "\[Rule]", " ", 
       RowBox[{"{", " ", 
        RowBox[{"None", ",", " ", "Automatic"}], " ", "}"}]}], ",", "\n", 
      "\t\t", 
      RowBox[{"BarSpacing", " ", "\[Rule]", " ", "0"}], ",", "\n", "\t\t", 
      RowBox[{"PlotRange", " ", "\[Rule]", " ", 
       RowBox[{"{", " ", 
        RowBox[{"0", ",", " ", "Automatic"}], " ", "}"}]}], ",", "\n", "\t\t", 
      RowBox[{"PlotRangePadding", " ", "\[Rule]", " ", 
       RowBox[{"{", " ", 
        RowBox[{"0", ",", " ", "0"}], " ", "}"}]}], ",", "\n", "\t\t", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", " ", 
        RowBox[{"Automatic", ",", " ", 
         RowBox[{
          RowBox[{"Max", "[", "sorted", "]"}], " ", "*", " ", "1.1"}]}], " ", 
        "}"}]}], ",", "\n", "\t\t", 
      RowBox[{"Frame", " ", "\[Rule]", " ", "True"}], ",", "\n", "\t\t", 
      RowBox[{"PlotLabel", " ", "\[Rule]", " ", 
       RowBox[{"Grid", "[", 
        RowBox[{"plotLabels", ",", " ", 
         RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]}]}], "\n", "\t", 
     "]"}]}], "\n", ")"}]}]], "Code",
 CellChangeTimes->{{3.743993136609664*^9, 3.743993202368743*^9}, {
   3.743993304986496*^9, 3.7439933456610403`*^9}, {3.743993440748426*^9, 
   3.743993462556728*^9}, {3.744012979532835*^9, 3.744013017866235*^9}, {
   3.744013059201119*^9, 3.74401310784264*^9}, {3.7440131480563087`*^9, 
   3.744013253827352*^9}, {3.74401361870009*^9, 3.7440136227702703`*^9}, {
   3.7440136562424927`*^9, 3.744013854427471*^9}, {3.7440139105135098`*^9, 
   3.744013924129532*^9}, {3.7440140090705976`*^9, 3.7440140098369617`*^9}, {
   3.7440140663732967`*^9, 3.74401472799924*^9}, {3.7440147813964777`*^9, 
   3.7440151537049437`*^9}, {3.744015184460951*^9, 3.7440151862570763`*^9}, {
   3.7440153594543257`*^9, 3.744015497951551*^9}, {3.744015538345718*^9, 
   3.7440156442426357`*^9}, {3.744015674268971*^9, 3.7440156814265137`*^9}, {
   3.744015911324431*^9, 3.744016008967353*^9}, {3.7440169026283293`*^9, 
   3.7440175801017637`*^9}, {3.744017645683721*^9, 3.744017780199278*^9}, {
   3.744017868124217*^9, 3.7440178766248713`*^9}, {3.744017932416861*^9, 
   3.7440180619546556`*^9}, {3.7440181305478783`*^9, 
   3.7440181683598824`*^9}, {3.74401828132137*^9, 3.744018292524219*^9}, {
   3.744018327431631*^9, 3.7440183277870617`*^9}, {3.744020261669175*^9, 
   3.744020275772187*^9}, {3.744020351581192*^9, 3.7440204297674294`*^9}, {
   3.74402046983218*^9, 3.7440204935984163`*^9}, {3.744020524284574*^9, 
   3.744020694698381*^9}, {3.744020754777182*^9, 3.7440209485086403`*^9}, {
   3.744021029193266*^9, 3.7440210499998703`*^9}, {3.7440212707303877`*^9, 
   3.744021285496921*^9}, {3.744021352790016*^9, 3.744021408994347*^9}, {
   3.7440233396735487`*^9, 3.744023348902801*^9}, {3.744023380656886*^9, 
   3.744023418772709*^9}, {3.744023525437282*^9, 3.744023616313375*^9}, {
   3.744023654762031*^9, 3.744023760485911*^9}, {3.74402379385459*^9, 
   3.744023867201549*^9}, {3.744024004652671*^9, 3.744024006520659*^9}, {
   3.744024041828887*^9, 3.744024245229113*^9}, {3.744024289263735*^9, 
   3.744024484991579*^9}, {3.7440245390936737`*^9, 3.744024569972492*^9}, {
   3.7440246559067287`*^9, 3.7440247485746202`*^9}, {3.7440248336144047`*^9, 
   3.7440248535919437`*^9}, {3.744024890333991*^9, 3.744024896201376*^9}, {
   3.744024976041501*^9, 3.744024990257041*^9}, {3.74402512011626*^9, 
   3.7440251258974524`*^9}, {3.744025165690345*^9, 3.744025246591634*^9}, {
   3.7440253359709673`*^9, 3.744025367030582*^9}, {3.744025423055463*^9, 
   3.744025448794685*^9}, 3.744026599261344*^9, {3.744026633253059*^9, 
   3.744026739521717*^9}, {3.7440267872158833`*^9, 3.744026791173843*^9}, {
   3.744026826330113*^9, 3.744026865531126*^9}, {3.744026897299856*^9, 
   3.744026909459032*^9}, {3.744026940268087*^9, 3.744026955225175*^9}, {
   3.7440269853783417`*^9, 3.744027000462799*^9}, {3.744027083886262*^9, 
   3.744027140255294*^9}, {3.744027265146051*^9, 3.74402727513277*^9}, {
   3.744027306711054*^9, 3.744027322168826*^9}, {3.744027370471142*^9, 
   3.744027507224139*^9}, {3.7440275491139402`*^9, 3.744027570858727*^9}, {
   3.7440276598312902`*^9, 3.7440276988598213`*^9}, {3.744027943446394*^9, 
   3.7440279547621603`*^9}, {3.744028011553995*^9, 3.744028190155534*^9}, {
   3.744028306912445*^9, 3.744028628204846*^9}, {3.744028668693961*^9, 
   3.744028677170279*^9}, {3.744028761026072*^9, 3.744028797267692*^9}, {
   3.7440288309596786`*^9, 3.744028832207131*^9}, {3.7440289040590076`*^9, 
   3.7440290308337717`*^9}, {3.744029260918185*^9, 3.744029490754766*^9}, {
   3.744049218923387*^9, 3.744049255305418*^9}, {3.744049356952466*^9, 
   3.744049377289667*^9}, {3.744049409805526*^9, 3.744049421270101*^9}, {
   3.7440495033868313`*^9, 3.744049516902096*^9}, {3.744049555222273*^9, 
   3.744049619614808*^9}, {3.744049741121107*^9, 3.74404988453503*^9}, {
   3.744049925629941*^9, 3.744050027848472*^9}, {3.744050064314643*^9, 
   3.7440501220707817`*^9}, {3.7440506017630157`*^9, 3.744050618694166*^9}, {
   3.744052917204465*^9, 3.7440529212244463`*^9}, {3.744053167307032*^9, 
   3.744053196559177*^9}, {3.7440533006714773`*^9, 3.7440533735348063`*^9}, {
   3.7440534353162003`*^9, 3.744053453585314*^9}, {3.7440535028721533`*^9, 
   3.744053610537633*^9}, {3.744053727634794*^9, 3.7440538400968523`*^9}, {
   3.74405392628557*^9, 3.744053934081587*^9}, {3.7440561143613663`*^9, 
   3.7440564350633993`*^9}, {3.744056643473873*^9, 3.744056726189127*^9}, {
   3.744056761982168*^9, 3.744057000479595*^9}, {3.744057048605632*^9, 
   3.744057087876856*^9}, {3.7440571210065613`*^9, 3.7440571368889217`*^9}, {
   3.7440571712984*^9, 3.744057247158451*^9}, {3.7440573075835953`*^9, 
   3.744057314026559*^9}, {3.7440573646430607`*^9, 3.744057412935669*^9}, {
   3.744057456367882*^9, 3.744057659257422*^9}, {3.7440577130669403`*^9, 
   3.744057713455557*^9}, {3.744057744210017*^9, 3.74405775988501*^9}, {
   3.744057790118469*^9, 3.744057828267727*^9}, {3.74405787130695*^9, 
   3.744057892522069*^9}, {3.7440579711549177`*^9, 3.744058039537129*^9}, {
   3.74405811108605*^9, 3.7440581801989393`*^9}, {3.744058393223281*^9, 
   3.744058479967607*^9}, {3.744058552489706*^9, 3.744058621558366*^9}, {
   3.744058665320877*^9, 3.744058672165031*^9}, {3.744058771357194*^9, 
   3.744058810875622*^9}, {3.744058843642333*^9, 3.744059148946209*^9}, {
   3.7440591926445103`*^9, 3.744059197512246*^9}, {3.744060393953253*^9, 
   3.74406041922504*^9}, {3.7440606143534613`*^9, 3.744060759342545*^9}, {
   3.7440607952749243`*^9, 3.744060814677824*^9}, {3.744060845274571*^9, 
   3.7440610561234617`*^9}, {3.74406119537819*^9, 3.744061246357065*^9}, {
   3.744069879462039*^9, 3.74407015344372*^9}, {3.7440704150681953`*^9, 
   3.74407046202621*^9}, {3.744070518297996*^9, 3.744070535826478*^9}, {
   3.744071208550014*^9, 3.744071219764921*^9}, {3.7440712733243*^9, 
   3.7440712937200317`*^9}, {3.744071331792918*^9, 3.744071345817355*^9}, {
   3.744071402405455*^9, 3.744071417030469*^9}, {3.7440718778896*^9, 
   3.744071914823516*^9}, {3.744071972037532*^9, 3.744071978877534*^9}, {
   3.744072492926167*^9, 3.744072540861659*^9}, {3.74407258215443*^9, 
   3.7440725918874598`*^9}, {3.744072700514937*^9, 3.744072740461485*^9}, {
   3.74407285423634*^9, 3.7440729380641527`*^9}, {3.744072970757428*^9, 
   3.744072973159238*^9}, {3.7440730039117727`*^9, 3.744073008324518*^9}, {
   3.744073052390801*^9, 3.744073083602602*^9}, {3.744073128804081*^9, 
   3.744073164802761*^9}, {3.744074098767021*^9, 3.74407414445098*^9}, 
   3.744074175413199*^9, {3.744074301135707*^9, 3.74407449297901*^9}, {
   3.744074542359723*^9, 3.7440745628859386`*^9}, {3.744074593940098*^9, 
   3.7440747954706697`*^9}, {3.7440748336081257`*^9, 
   3.7440748636504517`*^9}, {3.744074916797426*^9, 3.74407495269715*^9}, {
   3.744074998633462*^9, 3.74407504198326*^9}, {3.744075122294326*^9, 
   3.744075127098668*^9}, {3.744075170428989*^9, 3.7440752324590397`*^9}, {
   3.744075273130457*^9, 3.744075406219585*^9}, {3.744075456283654*^9, 
   3.744075474125557*^9}, {3.7440755138281317`*^9, 3.744075584914665*^9}, {
   3.744075636038218*^9, 3.744075707627842*^9}, {3.7440757608237753`*^9, 
   3.7440758108180637`*^9}, {3.744075857031158*^9, 3.744075939617693*^9}, {
   3.744076098740439*^9, 3.7440761290836077`*^9}, {3.744076231137775*^9, 
   3.744076248343981*^9}, {3.7440762872898083`*^9, 3.744076455131021*^9}, 
   3.744076574291808*^9, {3.7440766264230957`*^9, 3.744076709467814*^9}, {
   3.744076793122933*^9, 3.744076939868889*^9}, {3.744076989789422*^9, 
   3.744077056631627*^9}, {3.7440770895451107`*^9, 3.7440771729166822`*^9}, {
   3.744077224621233*^9, 3.744077227149173*^9}, {3.7440775156688957`*^9, 
   3.744077517275898*^9}, {3.744077547551016*^9, 3.744077654239224*^9}, {
   3.744077689461939*^9, 3.74407775763536*^9}, {3.744077962217237*^9, 
   3.744078004365378*^9}, {3.744078132984831*^9, 3.7440782256641693`*^9}, {
   3.744078279781752*^9, 3.744078585978457*^9}, {3.744078649908287*^9, 
   3.7440788654668007`*^9}, {3.744078918377695*^9, 3.744078931849547*^9}, {
   3.744079065749487*^9, 3.744079174760992*^9}, {3.744079209122745*^9, 
   3.744079222572547*^9}, {3.7440792799512653`*^9, 3.744079349802299*^9}, {
   3.744079414165391*^9, 3.744079416055863*^9}, {3.744079477993582*^9, 
   3.74407949849807*^9}, {3.744079553455264*^9, 3.744079582500662*^9}, {
   3.744079619557136*^9, 3.744079627613998*^9}, {3.744079661893046*^9, 
   3.7440797376578093`*^9}, {3.744079778746442*^9, 3.744079799559306*^9}, {
   3.744079834528206*^9, 3.744079862791133*^9}, {3.744079896745761*^9, 
   3.744079921823729*^9}, {3.7440799639619827`*^9, 3.74408000183132*^9}, {
   3.744080045256585*^9, 3.744080136338625*^9}, {3.744080180731263*^9, 
   3.744080200546067*^9}, {3.744080255905574*^9, 3.74408030028794*^9}, {
   3.744080357989668*^9, 3.744080403269376*^9}, {3.744080633325835*^9, 
   3.744080712185472*^9}, 3.744082344131093*^9, {3.7440823821622972`*^9, 
   3.744082494342862*^9}, {3.744082571743868*^9, 3.744082572675707*^9}, {
   3.744082607085649*^9, 3.7440826234598503`*^9}, {3.7440827384596777`*^9, 
   3.744082755032833*^9}, {3.744082793974813*^9, 3.744082829084976*^9}, {
   3.744082914484955*^9, 3.7440829167130823`*^9}, 3.744082963227532*^9, {
   3.744083016373178*^9, 3.744083185726406*^9}, {3.744083221835157*^9, 
   3.744083262528089*^9}, {3.7440832999624777`*^9, 3.744083348754073*^9}, {
   3.74408338076674*^9, 3.744083429108428*^9}, {3.744083503665543*^9, 
   3.744083567001279*^9}, {3.744083642253166*^9, 3.7440836458284597`*^9}, {
   3.744083728797182*^9, 3.7440837701169167`*^9}, {3.7440838524878798`*^9, 
   3.744083921437167*^9}, {3.744083959378622*^9, 3.7440839699138327`*^9}, {
   3.744084010922162*^9, 3.744084023066312*^9}, {3.7440841506477623`*^9, 
   3.744084247473484*^9}, {3.744084279330913*^9, 3.7440843925009604`*^9}, {
   3.74408445414282*^9, 3.744084461900573*^9}, {3.744084527409294*^9, 
   3.744084531202557*^9}, 3.7440846169193487`*^9, 3.744084696878211*^9, {
   3.7440847561271772`*^9, 3.744084757316387*^9}, {3.744084804066052*^9, 
   3.7440848320329847`*^9}, {3.744084953290998*^9, 3.744084992450726*^9}, {
   3.7440850236751213`*^9, 3.744085049800816*^9}, {3.7440853192318287`*^9, 
   3.744085390522829*^9}, 3.744085421895422*^9, {3.744085478422834*^9, 
   3.7440854825088053`*^9}, {3.744085512627838*^9, 3.744085653304196*^9}, {
   3.7440856947204237`*^9, 3.7440857162794447`*^9}, {3.744085780734455*^9, 
   3.744085803202259*^9}, 3.744085847796739*^9, {3.744085887222986*^9, 
   3.744085913558033*^9}, {3.744085973862629*^9, 3.744085982709345*^9}, {
   3.744086020629773*^9, 3.744086085409257*^9}, {3.744086228750128*^9, 
   3.744086230564834*^9}, {3.74408627601127*^9, 3.744086420314135*^9}, {
   3.744086505712042*^9, 3.74408653115547*^9}, {3.7440866567147837`*^9, 
   3.744086695498681*^9}, {3.7440868465850563`*^9, 3.744086847552911*^9}, {
   3.744087792157989*^9, 3.744087798092333*^9}, {3.744108409229774*^9, 
   3.744108503826808*^9}, 3.7441085517251797`*^9, {3.744108623944727*^9, 
   3.744108628207511*^9}, {3.744109325148775*^9, 3.74410936893578*^9}, {
   3.744109477406899*^9, 3.744109524235972*^9}, {3.7441095880078917`*^9, 
   3.7441097648190327`*^9}, {3.7441098065345078`*^9, 3.744109882616889*^9}, {
   3.744109926951844*^9, 3.74411010584317*^9}, {3.744110295964768*^9, 
   3.7441103766011753`*^9}, {3.744110409960676*^9, 3.744110430463661*^9}, {
   3.7441105178314*^9, 3.744110599818926*^9}, {3.744110670411726*^9, 
   3.74411068218478*^9}, {3.744110738345004*^9, 3.744110745896323*^9}, {
   3.744110855012108*^9, 3.7441108752667503`*^9}, {3.7441109235621223`*^9, 
   3.744110925332383*^9}, {3.744110964680519*^9, 3.744110965924678*^9}, {
   3.744111000821685*^9, 3.744111108689107*^9}, {3.744111166616996*^9, 
   3.744111167255911*^9}, {3.7441112486827383`*^9, 3.7441115111589947`*^9}, 
   3.744111541535377*^9, {3.7441115872178392`*^9, 3.744111718471445*^9}, {
   3.744111758733686*^9, 3.744111763782226*^9}, {3.7441118096235847`*^9, 
   3.744111881066888*^9}, {3.744121458304872*^9, 3.7441214727892237`*^9}, {
   3.7441215072294083`*^9, 3.744121517831895*^9}, {3.744126400221402*^9, 
   3.74412645588943*^9}, {3.744126546343013*^9, 3.7441266211483917`*^9}, {
   3.744126684033428*^9, 3.7441266871815453`*^9}, {3.7441272624568977`*^9, 
   3.744127271136688*^9}, 3.744127302133005*^9, {3.7441275623935137`*^9, 
   3.7441276085793467`*^9}, {3.744127655293394*^9, 3.7441278271187773`*^9}, {
   3.744127946799966*^9, 3.744127967225256*^9}, {3.744127998649501*^9, 
   3.744128037083528*^9}, {3.744128074776931*^9, 3.744128080264216*^9}, {
   3.744128116030684*^9, 3.744128368069976*^9}, {3.744129211607378*^9, 
   3.744129219426332*^9}, {3.744129469933872*^9, 3.744129499459691*^9}, {
   3.744129530669015*^9, 3.7441297632909203`*^9}, {3.744129821987301*^9, 
   3.744129843023869*^9}, {3.744129896094692*^9, 3.744129899645851*^9}, {
   3.744129950122341*^9, 3.744130270690881*^9}, 3.744130305133122*^9, 
   3.744130425954995*^9, {3.744130501900255*^9, 3.744130515714376*^9}, {
   3.744130571962308*^9, 3.744130588449185*^9}, {3.744130640375698*^9, 
   3.744130707156621*^9}, {3.7441308109926443`*^9, 3.744130820713355*^9}, {
   3.744131558342971*^9, 3.744131663057424*^9}, {3.744131724073491*^9, 
   3.744131760689578*^9}, {3.744131790759514*^9, 3.744131889943774*^9}, {
   3.744131921722508*^9, 3.7441319726155233`*^9}, {3.7441320118234453`*^9, 
   3.744132049620504*^9}, {3.744133631107006*^9, 3.744133649663664*^9}, {
   3.744135413755693*^9, 3.7441355421730003`*^9}, {3.744141673661158*^9, 
   3.744141680787219*^9}, {3.744141727325124*^9, 3.744141752770267*^9}, {
   3.744142138111442*^9, 3.744142147358383*^9}, {3.744142793611261*^9, 
   3.744142803274979*^9}, 3.7441434150561857`*^9, {3.744143512690431*^9, 
   3.7441435167566853`*^9}, {3.744143959065691*^9, 3.74414397917383*^9}, {
   3.744144124280794*^9, 3.744144300774136*^9}, {3.7441444558890257`*^9, 
   3.74414448622234*^9}, {3.744145656529223*^9, 3.744145672545381*^9}, 
   3.7441458139717703`*^9, {3.744146438234798*^9, 3.744146443524542*^9}, {
   3.744146543837653*^9, 3.744146548102644*^9}, {3.744147029262437*^9, 
   3.7441470473279552`*^9}, {3.744147084549436*^9, 3.744147148705517*^9}, {
   3.744147268656513*^9, 3.744147269206625*^9}, 3.744147467959993*^9, {
   3.744242787012001*^9, 3.7442427870818357`*^9}, {3.7442470478693647`*^9, 
   3.7442471996052637`*^9}, {3.744247252331089*^9, 3.744247383244565*^9}, {
   3.7442474311486807`*^9, 3.744247550919437*^9}, {3.744247595288618*^9, 
   3.744247615918437*^9}, {3.74424766112774*^9, 3.7442476787881536`*^9}, {
   3.744247721131846*^9, 3.7442477731221123`*^9}, {3.744247828424906*^9, 
   3.744247831759883*^9}, {3.744248042499329*^9, 3.744248044625791*^9}, {
   3.74424810578398*^9, 3.744248169295998*^9}, {3.744248220276093*^9, 
   3.744248414421117*^9}, {3.744248453108695*^9, 3.744248461580632*^9}, {
   3.744248502308502*^9, 3.7442486151326027`*^9}, {3.744248668220656*^9, 
   3.744248714578622*^9}, {3.744248780953484*^9, 3.744248980481451*^9}, {
   3.744250834226534*^9, 3.7442510631900473`*^9}, {3.744251098692078*^9, 
   3.744251170991626*^9}, {3.7442512174803257`*^9, 3.744251460878599*^9}, {
   3.744251498216564*^9, 3.744251519694295*^9}, {3.7442515729006767`*^9, 
   3.7442516491122293`*^9}, {3.744251681394348*^9, 3.7442516884328327`*^9}, {
   3.7442517199603567`*^9, 3.744251787572648*^9}, {3.744251820179747*^9, 
   3.744252029164895*^9}, {3.7442520672052937`*^9, 3.744252068107224*^9}, {
   3.744252102140444*^9, 3.744252124465384*^9}, {3.744252164967101*^9, 
   3.744252290262292*^9}, {3.744252721273741*^9, 3.744252871178008*^9}, {
   3.7442529129063997`*^9, 3.7442529333254642`*^9}, 3.744253265735771*^9},
 CellLabel->
  "In[308]:=",ExpressionUUID->"6bd67c1a-67ea-48f3-8e7e-4d7ab90324e5"],

Cell[BoxData[
 RowBox[{"visualizeRepresentation", "[", 
  RowBox[{
  "factorInElectors", ",", " ", "\"\<Factoring in Electoral Votes\>\""}], 
  "]"}]], "Input",
 CellLabel->
  "In[309]:=",ExpressionUUID->"f80e1e89-e2dd-4525-8f07-2c8a4e539e7d"],

Cell["Let\[CloseCurlyQuote]s make that interactive and wrap this part up!", \
"Text",
 CellChangeTimes->{{3.744252982753292*^9, 
  3.744252992121868*^9}},ExpressionUUID->"d1b5d1f4-1d9f-4b2e-b233-\
4844aa17ff05"],

Cell[BoxData[
 RowBox[{
  RowBox[{"visualizeRepresentationInteractive", " ", "=", " ", 
   RowBox[{"Manipulate", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"visualizeRepresentation", "[", 
      RowBox[{
       RowBox[{"calculateAllocations", "[", 
        RowBox[{
        "total", ",", " ", "min", ",", " ", "bonus", ",", " ", 
         "priorityHuntingtonHill"}], "]"}], ",", " ", "title"}], "]"}], ",", 
     "\n", "\t", 
     RowBox[{"Grid", "[", 
      RowBox[{
       RowBox[{"{", "\n", "\t\t", 
        RowBox[{
         RowBox[{"{", " ", 
          RowBox[{
           RowBox[{"Control", "[", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{
              "title", ",", " ", "\"\<My Allocation\>\"", ",", " ", 
               "\"\<Title:\>\""}], "}"}], "}"}], "]"}], ",", " ", 
           "SpanFromLeft", ",", " ", "SpanFromLeft"}], " ", "}"}], ",", "\n", 
         "\t\t", 
         RowBox[{"{", "\n", "\t\t\t", 
          RowBox[{
           RowBox[{"Control", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", " ", 
               RowBox[{
               "total", ",", " ", "435", ",", " ", "\"\<Total Reps:\>\""}], 
               "}"}], ",", " ", "50", ",", " ", "2000", ",", " ", "1", ",", 
              " ", 
              RowBox[{"Appearance", " ", "\[Rule]", " ", "\"\<Open\>\""}]}], 
             " ", "}"}], "]"}], ",", "\n", "\t\t\t", 
           RowBox[{"Control", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", " ", 
               RowBox[{
               "min", ",", " ", "1", ",", " ", "\"\<Start With:\>\""}], "}"}],
               ",", " ", "0", ",", " ", "40", ",", " ", "1", ",", " ", 
              RowBox[{"Appearance", " ", "\[Rule]", " ", "\"\<Open\>\""}]}], 
             " ", "}"}], "]"}], ",", "\n", "\t\t\t", 
           RowBox[{"Control", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", " ", 
               RowBox[{
               "bonus", ",", " ", "0", ",", " ", "\"\<Add at End:\>\""}], 
               "}"}], ",", " ", 
              RowBox[{"-", "5"}], ",", " ", "20", ",", " ", "1", ",", " ", 
              RowBox[{"Appearance", " ", "\[Rule]", " ", "\"\<Open\>\""}]}], 
             " ", "}"}], "]"}]}], "\n", "\t\t", "}"}]}], "\n", "\t", "}"}], 
       ",", " ", 
       RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}], ",", "\n", "\t", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"{", " ", 
       RowBox[{"FontSize", " ", "\[Rule]", " ", "13"}], " ", "}"}]}]}], "\n", 
    "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.744252999803709*^9, 3.74425305844283*^9}, {
  3.744253185769165*^9, 3.744253248658719*^9}, {3.744253349427153*^9, 
  3.7442535751145163`*^9}, {3.744253682232574*^9, 3.7442536910287046`*^9}},
 CellLabel->
  "In[310]:=",ExpressionUUID->"d4590f12-a679-45ad-ad68-a249b4be7d30"],

Cell[BoxData["visualizeRepresentationInteractive"], "Input",
 CellLabel->
  "In[311]:=",ExpressionUUID->"58f022ed-fdd2-42fa-b830-5b1a869b0462"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Wrapping up", "Section",ExpressionUUID->"42de6225-d550-43aa-9e62-eaa4454dd91f"],

Cell["\<\
We now have all the tools we need to play with different ways to configure \
the House. We'll import this Notebook into a playpen and get started.\
\>", "Text",ExpressionUUID->"375f3c8e-4bad-40e0-b226-ce35705bf9fb"]
}, Open  ]]
}, Open  ]]
},
AutoGeneratedPackage->Automatic,
WindowSize->{1367, 751},
WindowMargins->{{20, Automatic}, {Automatic, 44}},
WindowStatusArea->None,
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[400, 13, 515, 13, 73, "Input",ExpressionUUID->"2cf11a5f-25ed-4589-b374-f4d85abe0460"],
Cell[CellGroupData[{
Cell[940, 30, 96, 0, 98, "Title",ExpressionUUID->"a94aa734-d384-4b55-abf6-a0696c90c4ba"],
Cell[1039, 32, 461, 9, 58, "Text",ExpressionUUID->"6178ec3e-b46e-4957-a90e-725ebea4b7f2"],
Cell[CellGroupData[{
Cell[1525, 45, 90, 0, 67, "Section",ExpressionUUID->"9d27052b-bc8d-4418-a1c2-f8ef6f7f69b6"],
Cell[1618, 47, 523, 7, 81, "Text",ExpressionUUID->"ff020f34-73ad-4499-bf7e-3c75b0169b3c"],
Cell[2144, 56, 1439, 36, 129, "Code",ExpressionUUID->"2bf262a5-3f7e-4c10-8f37-38e3b7392466"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3620, 97, 118, 0, 67, "Section",ExpressionUUID->"b73fd97a-ed90-432c-aa03-bd5d578d2f3e"],
Cell[3741, 99, 583, 8, 81, "Text",ExpressionUUID->"1d779c54-c76a-4a69-a957-e0bd9a89751e"],
Cell[4327, 109, 410, 10, 75, "Text",ExpressionUUID->"e649f26b-bf35-4f4b-bbb4-6914c54a4989"],
Cell[4740, 121, 1047, 24, 33, "Text",ExpressionUUID->"02a01ddf-b7c2-47bd-b0c3-dcaddf6cd631"],
Cell[5790, 147, 253, 4, 35, "Text",ExpressionUUID->"f9e34095-38a9-4934-a780-dcb013ff437e"],
Cell[6046, 153, 816, 21, 72, "Code",ExpressionUUID->"087600f7-9c93-439a-9057-c6773d5050b8"],
Cell[6865, 176, 370, 5, 58, "Text",ExpressionUUID->"91fef37e-13ee-4d71-9d33-6181cda44c48"],
Cell[7238, 183, 226, 3, 35, "Text",ExpressionUUID->"b42ed573-6acc-4324-9330-3f1d772d287f"],
Cell[CellGroupData[{
Cell[7489, 190, 189, 4, 32, "Item",ExpressionUUID->"86ce69d6-c1c1-44d5-b308-d39d7186f727"],
Cell[7681, 196, 277, 8, 32, "Item",ExpressionUUID->"7f043f8b-e4ba-464d-82a9-0d10cdb197da"],
Cell[7961, 206, 562, 17, 53, "Item",ExpressionUUID->"14b2db89-f135-4af4-b985-70df4d659ac3"],
Cell[8526, 225, 243, 5, 32, "Item",ExpressionUUID->"27a7ff42-1437-4dcf-ab9d-0969f34737da"]
}, Open  ]],
Cell[8784, 233, 3897, 93, 357, "Code",ExpressionUUID->"2af2792f-4235-493c-9191-817ddf6498e6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12718, 331, 245, 4, 67, "Section",ExpressionUUID->"bb05200d-1973-4243-988d-532d56d44760"],
Cell[12966, 337, 310, 6, 35, "Text",ExpressionUUID->"4a33735d-50f3-459d-989f-68ac96c2bc13"],
Cell[13279, 345, 211, 4, 35, "Text",ExpressionUUID->"cae51f5a-abb1-43e1-9609-623947536585"],
Cell[13493, 351, 803, 18, 52, "Code",ExpressionUUID->"d82cc2cd-2590-44cc-8aaa-fbbb589c07a4"],
Cell[14299, 371, 600, 14, 110, "Code",ExpressionUUID->"56735894-7ade-4fad-a1a6-be4f0e19141f"],
Cell[14902, 387, 349, 8, 52, "Code",ExpressionUUID->"8e286f74-46c1-41c6-baa8-2a4c6f7af786"],
Cell[15254, 397, 238, 5, 35, "Text",ExpressionUUID->"7ce24e0a-572a-4388-be00-33a966594185"],
Cell[15495, 404, 24187, 421, 889, "Code",ExpressionUUID->"3d955129-d597-46a2-bfad-56335a3c4e77"],
Cell[39685, 827, 2843, 67, 167, "Code",ExpressionUUID->"7e0cdd79-be9b-433c-ace1-779c50317168"],
Cell[CellGroupData[{
Cell[42553, 898, 170, 3, 54, "Subsection",ExpressionUUID->"e9d2e25d-7f8c-4b50-a8cd-8735cfcf8887"],
Cell[42726, 903, 414, 8, 35, "Text",ExpressionUUID->"6fe0f407-43d0-4395-9d9b-2c42200d8b1d"],
Cell[43143, 913, 496, 11, 52, "Input",ExpressionUUID->"a47fb355-bf5c-41c8-989c-f70ed9e3afc4"],
Cell[43642, 926, 246, 5, 35, "Text",ExpressionUUID->"66cab87a-47e0-4f6a-b40c-146602d682cc"],
Cell[43891, 933, 675, 13, 52, "Input",ExpressionUUID->"506f6e34-ba00-4782-a0a7-d733184cc3ba"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[44615, 952, 182, 3, 67, "Section",ExpressionUUID->"a451c960-24c9-464f-8cd7-32fe62b165b2"],
Cell[44800, 957, 7088, 152, 515, "Code",ExpressionUUID->"8196e46a-cf86-47fc-992d-a8e1edb59fe8"],
Cell[51891, 1111, 214, 5, 35, "Text",ExpressionUUID->"42722348-58ef-47de-b012-854cd0e902f2"],
Cell[52108, 1118, 276, 5, 30, "Input",ExpressionUUID->"a24bddc1-8386-4472-945c-8504766704d6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52421, 1128, 247, 4, 67, "Section",ExpressionUUID->"a79e9998-3163-4ff4-b3b8-9078bb5ae4b2"],
Cell[52671, 1134, 471, 9, 58, "Text",ExpressionUUID->"7667d014-62df-4e32-91d4-04bfcb374b40"],
Cell[53145, 1145, 990, 25, 129, "Code",ExpressionUUID->"da3b6dc3-9eff-4f11-8eea-148857aee3f8"],
Cell[54138, 1172, 249, 4, 35, "Text",ExpressionUUID->"57c709a2-6f6a-40f2-8fdd-2bc3aea08308"],
Cell[54390, 1178, 979, 22, 148, "Code",ExpressionUUID->"f8735a79-8207-4cdd-bee6-b86dc1e42209"],
Cell[55372, 1202, 23542, 394, 908, "Code",ExpressionUUID->"6bd67c1a-67ea-48f3-8e7e-4d7ab90324e5"],
Cell[78917, 1598, 243, 6, 30, "Input",ExpressionUUID->"f80e1e89-e2dd-4525-8f07-2c8a4e539e7d"],
Cell[79163, 1606, 211, 4, 35, "Text",ExpressionUUID->"d1b5d1f4-1d9f-4b2e-b233-4844aa17ff05"],
Cell[79377, 1612, 2885, 67, 262, "Code",ExpressionUUID->"d4590f12-a679-45ad-ad68-a249b4be7d30"],
Cell[82265, 1681, 143, 2, 30, "Input",ExpressionUUID->"58f022ed-fdd2-42fa-b830-5b1a869b0462"]
}, Open  ]],
Cell[CellGroupData[{
Cell[82445, 1688, 85, 0, 67, "Section",ExpressionUUID->"42de6225-d550-43aa-9e62-eaa4454dd91f"],
Cell[82533, 1690, 225, 3, 35, "Text",ExpressionUUID->"375f3c8e-4bad-40e0-b226-ce35705bf9fb"]
}, Open  ]]
}, Open  ]]
}
]
*)

