(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     75968,       1455]
NotebookOptionsPosition[     73219,       1403]
NotebookOutlinePosition[     73598,       1420]
CellTagsIndexPosition[     73555,       1417]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SetDirectory", "@", 
   RowBox[{"NotebookDirectory", "[", "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{
  3.742681609598864*^9, {3.742681684821713*^9, 3.7426816858839283`*^9}, {
   3.742682531307863*^9, 3.742682532410281*^9}, {3.742682680885469*^9, 
   3.7426826811969013`*^9}, {3.742690105826301*^9, 3.7426901119852962`*^9}},
 CellLabel->
  "In[262]:=",ExpressionUUID->"7c7ec41f-99d0-4464-acd5-26fbe7c3a19a"],

Cell[CellGroupData[{

Cell["Let\[CloseCurlyQuote]s import election data", "Section",
 CellChangeTimes->{{3.742671932830008*^9, 3.742671954331812*^9}, 
   3.742675025773682*^9, {3.7426973008304863`*^9, 
   3.742697322152257*^9}},ExpressionUUID->"a2df0621-201b-45c5-8d2c-\
cb320c987389"],

Cell[CellGroupData[{

Cell["\<\
The most comprehensive source for past elections is on Archives.gov\
\>", "Subsection",
 CellChangeTimes->{{3.7426753666662292`*^9, 3.7426753774566917`*^9}, {
  3.74267555990092*^9, 
  3.742675562763348*^9}},ExpressionUUID->"4aea63ea-ffae-4fec-ad13-\
ab84b0c73367"],

Cell[TextData[Cell[BoxData[
 TemplateBox[{
  "\"https://www.archives.gov/federal-register/electoral-college/votes/2000_\
2005.html#2016\"",
   "https://www.archives.gov/federal-register/electoral-college/votes/2000_\
2005.html#2016"},
  "HyperlinkURL"]],ExpressionUUID->"4a34b757-73de-49f3-85fb-6b178152d876"]], \
"Text",
 CellChangeTimes->{
  3.742675587130207*^9},ExpressionUUID->"5e4755fb-5db7-41e6-84ed-\
0b265239fd37"],

Cell[BoxData[
 RowBox[{
  RowBox[{"html", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\<https://www.archives.gov/federal-register/electoral-college/votes/\
2000_2005.html#2016\>\"", ",", " ", 
     RowBox[{"{", 
      RowBox[{"\"\<HTML\>\"", ",", " ", "\"\<Data\>\"", ",", "1"}], "}"}]}], 
    "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.7426778978919773`*^9, 3.742677949398901*^9}, 
   3.742678574983671*^9, {3.742678851399378*^9, 3.7426788609668016`*^9}, {
   3.7426828326202927`*^9, 3.742682871464521*^9}, 3.742682948624071*^9, {
   3.742684826615583*^9, 3.7426848437288637`*^9}, 3.7426901355923977`*^9},
 CellLabel->
  "In[264]:=",ExpressionUUID->"e9c280f9-0f38-4a5d-ae9a-4a0588da2c59"],

Cell["\<\
In spite of the misleading URL, the 2016 election results are on this page. \
Let\[CloseCurlyQuote]s get them all. As you can see, the tables have nested \
cells, which don\[CloseCurlyQuote]t translate on Import:\
\>", "Text",
 CellChangeTimes->{{3.742683149935554*^9, 3.742683152910698*^9}, {
  3.742683270396512*^9, 3.742683275340609*^9}, {3.742685533963401*^9, 
  3.742685575858191*^9}, {3.742699011989217*^9, 
  3.742699041291974*^9}},ExpressionUUID->"8e0e48a7-646f-411d-8674-\
4e69684577e9"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
XqX1WfJoLMUpGL6u74XsIxvnx9rmHsi+qYI+L/kvt2+l80rHJrEWMtHUQ2o7
tHKoK2vJGfGIy9/TckCfBQAAAAAAAADwl4A+C/4yh9NnO2S922S/ZRfXzz4+
S58NtdbOZYfaQQn/lfe+r3U0SXeMY+EWX4Wo6Ul72a0rHmegTXPNST3J77K7
yX1VmP+Mn+PLpundSBvXYLf6LNHiQcqbFfrJKrqlQYvV7u9Bnj4babSbZxw9
b0lHbufcv4iVS0N+vow2YN+KftZxzA3oswAAAAAAAAAAwO6APgv+MgfTZy/N
rY5f64/5cUt1JdLRfFuMPZvjqyrVooI+26K5Lk9VVpyGUv6fHpm9cte5K32W
vi0l1sP0UYxt0LqZ7+Ue8HqqOnx+qazPstgXHOdBf++gzwIAAAAAAAAAALsD
+iz4yxxMn62YRynLv1T2b2z1hjS6HtJwU0Y3IxrfjqN/h1dDspYa/1nm/5n8
3veCnKUnxRPN02fl/fJtsnS+o1Lc1jhHmHx9PDdajE6j7F6Nafpik/tpCZrz
zvRZTRyAtb+prq67vQe8nrLP7dl5N3im6XMe8ud8PaBJUXwD2Qf4XK/PynGK
oxxhBXXdBUV2iYKCoi9hriHYDQpKMwvsEwXldAvsGwUFpWrJ6ze2BfosOEaO
239WzfEkx58l1yH7zSH324/yOm3OpmiO5pd4mNUXdcZppMtViz+rxEitEH9W
1fs02ieXIN3Zfvxnw1M/i3nJxDIkXo1d3gOuUcuftW8l/9iVS/arTQtX1tSz
UOuhtB1fzkl2+Pizhx5DUVCaXOI88LAbFJTmFdgnCsrpFtg3CgpK1VLUb2wL
9Fkif2mTeTOg9rkcF7MV+fnNP4ujfHpLt5JfZSm+XfJ2ftLT4HDxZ9tkvszJ
erGyy/M8iUGbpc/673Jc0gHZcTP7kfW1M5ou1x/JfrehD629+TH3VT5n7F8r
a3odmgfHeK4baYK6HGiDR3utF648ml3Lv9klp7Tep+qzaWxXn6ZXos3tUp9V
dUr97+ifc/170Lmdk+97a21deZYtMj/iG+ApWqvxWJQfTI1dELXJ981x3w4N
5dgZvVSPP7Q+CwBQgd0A0FxgnwCcLrBvAEBV9t1v/PV+yXkwtPqNXNrXM73+
+rMg86od6S72rqSOlUfz+4HeNw5EHE6fLVfi55adP8uj0bl6XLffVXKDnfWm
aYV+pBi0eW02+a2Mvf6JPufTtGR82Ei3fHIz70+xPrvWE0e3I+pqrp/7rW6t
zwbM+vprmCky6Bb34COjjZxPoj7DvlHzobV7BnWU61fjVWhZOWRUaIv8WqHP
AtA8YDcANBfYJwCnC+wbAFAV6LP7w30ZVtLcZJ8795XHluwk/nRb8W0J/na7
1k9Ohabrs1l734U29D3P9O/kWuZcct/2Xscl6mCQw7Q+1e9Wal+rBQ1KXFf3
Ttz3X0bvU32FcwqLp7oLfVaJ/xqWi4k2Zmvde5CpmcdxflceTTL0cV7Gr8V+
+glfM1XH1z3fN/Gc0GcBaB6wGwCaC+wTgNMF9g0AqAr02f2h+PWdd8l8ssj+
sMl6HGs0l46geYkxRHejz8q+eNBn9fxau/2a1tJnkxik0vHdByn+qO+SeaXm
z4q03CuTnAzJzndtGl6qfplhGdxZ5Ml+mP6CRvK+9zMpn1fot/0wytAaDZp9
qJUpkx8sxH01Nedt0+TFIeuWX3+LrO/1MYtH0bc9znFVidVC8TXlvq/q96vf
g6iuzyP1+5diHrbYJ14urcshWSViqCh4CzJv9P7/7f6YnG/1kLLPqy5/eTwB
oC6wGwCaC+wTgNMF9g0AqAr02T2xciVfOTFfUIQmDqjJ9FL7TtRn7Z/sn/O/
XVp8LaLiLl3yMgLLyr6G4/cc3Wblk7s55+Lrb8WqPbl2++MlbcPdxIUtg+95
62Oi44pzTCXfL/iucN4dNqww5m10zu8aeuQvU/kerPzk+rLsO7HZzXm9nD6j
NMFz9L7dpK47OWdNTs4uAfgFYDcANBfYJwCnC+wbAFAV6LN7YuVQV/LlS3Ls
MOY3XWpddKjbM6JihT58yrHZGq7zYmriTKaarvka/6ZPZk78y84997v0aX6n
98Xr3kxV38kT5M+2WwAaDOwSgOrAbgAowYqVXwT2CcCRk9NvwL4BOFIOMB+I
gT67L3wyNfu9zy66NHm0yPnK8WEs0GfjmATuk15DVb7/vs7RlJXDKdJnWV6p
4liWBjkH9KH7Df5uuwWguWxll96CrIcxdZW4HS3q9Ic0fXH0ORpBysqlcb9L
RlCG93bm19zn4D73DRoExbixMu+r92ZG7yWN3oCsnLAg2fXxyLwKju8PaHAl
lc3fRjcTmgXP9pDvFa3bQXCdXRo/17nI7dl2PIvqH9xPI3hW04KYSPb9MMpD
adxa6R+XVnBsN/j7uFyOwt/AK94PkknQ7uxnkwa9jhKnu31pRHM89691Jq4V
3I+NLS8PXZmKrNQ4UK3+9NfGg0r2ubnPSn8nleHNOIqnttDEIQrPsQt7PHS/
VpZ4nOn2J+SWud5vm4ZhW9bc1/VYM6TRnUmWxudmlyzeZjTqq31MpzekWcZv
uy+T6JmE4y7YN2FcsaH0fMTcHCE7WU8ec/9agV23Xz7HnJc112A8mARzmMhn
brndKOC+jNfXcwt7PB7K2fW+gT67P9zn4vxgnf6IZm8L8cCVo49PGcckCNdH
mriXZ+edoA9SY422rsN+IUMvjtcUt2t91r5T8zy1g75FyRXUm/3+Df1F/nK7
BaCp1LNLn6wbfQxm3bsnW7eeBWuEd4cjfR48ZaxpZ8bmsa5TrXxWZ6nrOyVy
IKb1mNWJMb016f1oSzlAf4vt3mvMxfG/N835Mnv2F2l87DTufYfsQ+uWqzRW
9/i9emWcJ00s8IxivjU/zs6u4LkNjiuvgX5vWes2+/3Trqlin3IOiTJlKOmn
u7HHw/drZXGSWHHlrtf/qJJzdrjzd07+0sr10UnK5UjxlUnyllyYeN+8Z5yH
rqY9TJT7vov15PH2r9XYdft1WJzI0veNzSu3vdewx+OjrF3vG+iz+8W60ee1
L9QFwjWEcGybLNcn/8df+1p/TYU1U/tmnh4rx7W92LSrVZhHScw3PwrjH/j+
2o9EiYfbommc32flSvmf0jxLp8hfb7cANJE6djnry+Nsh4ah78uLRdbTlEZK
/rzuTnIxnirp/WzTXCc/BeOI/H5xpNWpXBomzyRL6y1A2mvSvuxS57KTlLYS
+6ebG8d9P6R7VzpHqM8ulLlq3tjP9ulwffYz1YMObVtce6m69looe5ZaZNxM
aPoc9CXPMzJvBsq7bPOE19IcnhvyqPQDn897O5Hvs/UYjA8ZuTr3QSV9lt3n
Vm9Ao+shDXm5GdKgr76P5O0wtYH2dvrsgfu1sjj33Ur9j5zntNPj40pb9Ve5
3KH24lrK+Y3rcA/Iuo8Zy/OV87EwdibXCj1oz/D30C0a3E2D5zMNxgLVFnai
zx5r/1qRXbff1Par6LPpHLbOO1zt78Mej4Tydr1voM/uH/dtSkaO7yrXaLn/
NO9XMucVvk/eN5t3fbs0fxqL4zufO0jzjol2zrZZ68r+A9Kxg4bvadoGtFsA
mkdVu3SfRT1l/LJQvhPx49DwIqfvAwk8rs5Yo7t6b6J/YTgWta7n6om+03Vo
+6bm/eb6bDD/1fKzoPHlIcetw+sY9cczj0aa+Padu6zndQT6bN11rmuJ9+DW
0sdHWHk0u2bv1g/gd3EIjlY/YH3IMdgnv8/mZ85JfZcmzC9Y6GPjXKNb5VE9
fL9Wlm30WTE3B/vOlyX4s9Ta/6HA3lmG4+aVqY2TIvvX8jENetBvIY51eUCf
LU8j9Fna5EQukRO79O/DHo+E8na9b6DP/h6+55L9MqXxlSZewKZ0H9K5QBl9
1v9ekPU4ieKgZeq+2nVSsT4bzelyfJGavqdpG9BuAWgelexS8q2cFO01Fvyo
jOw9i75H7teCFlHJiSMu1CVYDy/d5Bgvz4eTnS983xYe43qazj84pxufc+mJ
x+fVqU79OUyn0unY8zhmwcWARv1YpxqSvHz1XlIdV6fzlkLSZzPnv+5sP+MW
ewbhv762Ahod4yd+BqFGsv9Ze93xjM8XBo8Wi02fZR8l9NmoffpJGyytEVVp
t+yzUIeKbG5TGf89neeM38u2O5+mTOvK1qfT7/N4/9OvrHpW7Bfi69rci3D9
qGN9zfH9/Z1VYa5+kPM89leh4B4tN+1lmdNe2L4xvZ///qmrzxbqDT/zdC9D
VX1AGl/U+7eDfm2jE8f9Z25fUGNcjOuQ7gGooc/mjBf8XeUuNDP3yWDrtknu
nhJxvZaOr1wPiuB9bdhflBjvw7Vq3H8Icwsd/HzhcZ/Vnn9io0HJ7f9+i9J9
spfG94jffewxP1gpu68ynsTnDZ5Z1blIpfGF2y37ray67aL9as+3a1275HxE
uR7WR3olB8Fa9hjfN3ns4/+f10V+Huy+F/7mupLCXDj32oT6hHVw0ue7L8rO
ByrY9b6BPrsnNuOO82GT9WyRo2l23tecBrJfLZtDFemz9r0hHrulPsvjtJQp
0GcBAL9JFbv0XlP9r3VVLja/fbvWE1uXI1V/Cv3ibjRxiULt6n6esfb1ybrX
53FsX5m0kOZESf/cM8l6kI7rz9Jz3unOaZD1nvrVmHKs1Vr118F8fJQ1f/pZ
+84mlz2DmZTTYp74GG4RA7GsPsv2qwnj1tc0qZ92Hzr//JN9HuYTutbfy1Zv
JI33TMe4tYL2oBm3z7s0+9yfYFV3PEvjA7fICq7JfUyvefSqm0sX67Pms6mJ
Gdwm8zXDAa1iu43nTd07i8wrMRfg//6/6ecyhTEIPL7nWH3XoMN/HyfPVs3n
Uq1fSNt5YOMvpvR+f5D0Vd77lLoaf+fwXcl8yzwnhdeboR/kPY/BY8Z+hm34
WSi5vpLfu2O5CoN7quRwiMsu96uXYG/6bEb/mOvP7jk00d6/Fg0fbHZftujX
gt8Y97Niv7Vo9CiuLbYZF1u9IQ2TdyW71Wf5u57Jlvugw/pP2HrQLBwPNt8P
847cmEnes2TdeDmm+ctE4wsU3N+njGv6tmnUk/OnbvptpX9On//gYR7ce/3z
tzJivtuPI62fUkf2GWZjcOZ7sWX6/rX+/piyfbL4rk4s+thY+9dnK44nFO7r
DcZh3VgRjMWy/cVUG1/S9tG9NYM+RZPbJqybdNhW7VdDLX2W9Zvqu8Z685Gz
ixHNHjQ5ifLG5pr2OHm2aHAu3rPpl5d8btxbNNXk5AifR1iTMKeact/PDW09
vY8ZGRe6Oq7tfyrFCYrvR+tqSvaLLs53i8bPO5wXlJ0P1LDrfQN9dj8kMaHj
ceUhoz9ZTsV2cFlOn9X5uoaxqMxHi5ylI+5JLKnPem9ibNrQtkY3PK7ViMa3
4+Bvo+C/B0EfgPgGAIDfo4pdWkwLkLXBTFa+3gfSz1nLs75bmImEMbu1819x
LmyxblTun4W508ZXVYmnm1GEeWWd+ueQ6nbSepetk6K4XT+prtUVtBi2b34b
LYTrD5fZe5Hsu3QsHb6kV1mkdeg/94R1tL7wWEWiL2VeW9DG890BtcYznnst
nkPwXGHa51akz+YXZW1do92K8yax/J//i/7v44J1G8/1ajyVn/f4Oh+hGv2C
vBdAnKet4086D8Xv6wv3EGxBkT6rve+7ro9r5ebWXbfL0VrLWuXkFvzlmBS1
4xtUaLfcXjP1WSUHhaYk7zpr9mvf8+JnJPUFuxsXdxffIBoHkuvfQT4O3h4v
6re/PHvLs70yfbSoj5Z//rb0vnJa+Ky66TGrBQ2Sv+vfjdm38Xq75nOo1Cfn
5drWx3Peqz5bYzzx3ovz33UlzaL6+JLRPs5lLW+QvFuIfqdm+81ip/rsjucj
aWkpa5Td2mPYB5e117wiPivuA5NXeNvb9fPNpcp8oIZd7xvos/tBbbcD7X5A
70V6n8LGZbEdd6XYtKL+O3zho5bLxrOz3HUSf0crf9a+leYlwThgv9q02EFM
lqbzV9stAE2mvF3yucj2MS+FtV9vQs5mT5fv2kLcWj6njX1x18Ug62sz3/AW
ZPbZHJXl91D64KtJFJveuOhE8zdxXAn+9ulp6yHPK+vUPw9eDz6GLB6NpG7r
+UyGDuula/Syv6lF0K3aNHma0exxStNNMe/GZPA56cVYmF/W0WeFtfvNjNxY
g/txheea6gvyvDj0FXWiMdT/dmjEPtvXnpQ64xmP3cyvhfsYqO89yumzrb65
uW8+OY98DiT6Utdpt/L8P8rv8DimzsUw8styWVyN4csizbmaA59vbbtHsk6/
oOizF4MoJ1nogzgMn43wnr9F45d1+wrfN9nC/RXnkbukrD4rPI+d1sWj8bnY
xhabPZbhXjWDf7bZtxg+e5+t4UbBPDr62y+vxerqs1F9wxwUnrcuYd299X7R
meRLqn8vxcfGwHZ7kr3FTfOTx1qNNbB6/Vr6bi/0q7PS/tN3RR9MrZ6cMS4K
viUdsuJxcTnf6CkZ7xMzEH7vPLS1WTKmTB9NmtwOBR27c6uJr16VL5b37brc
fh8dir3dz9d7l4P7O+M+c3y/yWoh6E7hc4m3J7vvU0HjSMf77OfvBf3zSOif
03ez7iPX+brJswrrN+Vxu9nzT/VXzTuJFVvv1nzXW7lPDnNqB+P9ONkHba3t
8Ef/6/vUZ6uPJ+LcePbuJrFz3FdTv0+k1viS/k5r0z4SX8qfBXu3sd5rFVOr
/eawS312J/ORcA9CeI98KU49fyezI3ucPFk0vTWoE/Un8ufrZ+8rz53dd1+9
tvR+iLGyx89OoguF/f+E+f3yd1z657u2p9k1e769ablnlUn1+UBVu9430Gf3
hKd7R9yJxq9oHuWq86eoPdxm91PjVzeKQxL2VfJnfK+h8yidN2eeE84r/DAu
R9jPKO/OW8FYGJ/XU969GI/wnwW/gxeMH92eQYMrg4zegOa7bHrhHOPZpEFP
3X/TuujS+CEYP4rWkStvL3H+wlhShxkZmkl5u/SSMfbsfKTXAYJ+z/l0Msoi
fQfF8ljpY8Jx/4WBxjfL0KwJRZ0rflcs9M/K/ITvf9T4iQh+JmweVaf+RWj1
VTb/E9ZWahwDQd/Nis1Zhjy/Qk0xc3wU6uizSn6eOI7CeYsGj5r7Eu0zk45h
PqnZvlrbUX08421N1Ez5s1PzupXQZ3vqumrB1uyJf2rNdsvnRoZu/3wF/8MY
+6adPD9LO/b45Gb2JU6qQdXsF8R2bigaK98rMNHE1HVf6vn/VqGMPqt9Hnv4
fV0bE+MZMJ++vL2sv0RdfbZsaV3NhPuh1We5BqPx3+R79tZ6a41+TWjHY73/
fdzvZPYf6rjI820r9hn0yelv1tBnC0s7O1Z9Bcr57BaTb2/696XcT0gbQ8Bl
fXFf7z+tPv/0mDRGBNd0gnFFs7/AYppVknONxY+Xc43ydsnfQZSmbp/M43sU
PK+96bO16i7O02SSGF8Xw2ScqTe+iO1DHWu5H1kn+a067TePnemzO5iPdDXt
hPuSTzfz013Yozqvzu+v5+y9mRzThdtYcj/4+yRdfl/WNvn5Sj/fLfOp1Z4P
VLDrfQN9dn/YFeO5ymvurHiw4dxI9p+N2vrNmAaXmjggrC/xPzLmHZv9XPaN
eny7Z2ji1OTkzzkB/nK7bSKyLexsHfVTYr/Kpv+eZsQDW7yakSbT0uRKql+v
MGZOO+oTDrGvoqmUtks+9mbM43QxYngZb+LJcT/CrPwxzl2q34RrCj43yNQk
2Ho49h/I1QvZfvOseLq6fCV16l8Mezcdr5dZfjXuPyDkY9r8fqp3bTmOVNRn
1+uE7eIbiGNom0b3YUyhvLwVet2af55ooUksxd1SeTzj+dRuZN8wvq6S/TGL
9VklLnIIf46b9lS33fJc7bq+s3oebL7GzfA/ZfGNdSUeG+r2C/z+KPEwuf/Y
2Vgfo4TXr2Qs7qoU67NbxJkuAV/3ZeVjE/rH91TjOFV9Npy7my/qGlOnzwp+
ubrY0iuPrCeL7Hcn8X2v06/5P5t8MMr7xbXf5VCzPs/PPcf6joz+M/W/3Ic+
ux7HnC1zW+1en+1o+6p0Lp3u6Uz1txbNtdfB39cN0/3ASV+vicfA+qWkz+I6
q07TIXFexvdtpL8v9sFp3evFiKzdJ+vy42WwL322Xt3Ffdzt3oisNyc7l1jt
8YW1D50+Rrw/Tvf312m/eexKn91+PqK+V434Up/h9vZYEHtK01+n9dTE2WJz
+/TdAK3zNH44qv9SmH+J+fnq9Vn9fGAW+3xvqc/Wng9UsOt9A312n3jifqGC
MpbmREl+CalEbaZMnKikMN33J2MdEdvCyhP2HZSt66nxt9tt85D9xXezjioT
t4kXaTxZpfsgdtmXu6/iXr1DxCVvKvXiG+g1wCJ9Nm5jundhRceJPpYZD1Cj
ueQex/TZzPWbZg5fp/5lSP1ig/tL4ng15X6qrN5rf0s/1Xb7W2pFQv6bzdph
xUq4N8l1Nu864mvsajWJ0vFnw3hvGeNs92ocrHUWUvyfYh0jf169PVXHM76f
NHy+5v2EJnfrYt6LsZvEmLFF+mzW/nr1uLrtNh0r9Ov16vpsibl+0Mbz9NlS
9h2j02L532Tb93PiqOrKntpYsT673xwbwu9krdszfNCOVZ81HuZrH+1gjey8
WzSRcm5lzdN1+uwiiS8pxwvNYrt+zf2YR/FnhlcGdS40ucKy3u/IdrMqHhdz
86Hlfp/taWTjSrjn1f2cizGFts0px35zN/EN9Pam6iNV41Jqjit4/kn/J/sH
Fcy/+Zxaq48x3ajuPavdJzdMn61Sd1eOqxjfw2i/oEULvhew9vjC8oNVmq9W
bb/57Eqf3Xo+ktU/KM9n//aoe58i6OLyh7n50nxyXmc0uR3RoN+ltiZXmF6f
zXi+D3E+tV3psxXnA9Bn/5TOFfrXdXPyiXT644z8fT5Z12qfEPd1YWylgea8
xp1Fzouo7fL4tItnTUxnwZ59mmfkgmxdDtN4QScM2m2z2Is++6X6SHSvTbLe
bLLfLG1+YWH+L81bdtWXi/MA6LOcevpshk9o+I7XddPy7ZHzNFTaWNl49nGJ
/G5Z2+pk7SfO1WfV5y6sGTPamm4OX6v+JeB+seH7v1SvlWMkiOt0j70jrJ9r
eYOUHyyv5jO+R0+zvimfHyz8YEGTft58vctisBTN9xqmz0qxzwqLsNev2H9W
n79Fp8/Wa7dF66Fa+uxDWpdBhj17vC9xPXI/Z+r+3pr9Qv76qKIP+Z5yXxXq
s9vqVwUsWP6aWUaOoKw9wseqzyrxVQIWT6L2osuzohtnquvoNfs1d16uvWr7
j3zt4Kyn1+i20Wdz53VCTKEt52orTT7Gonq6Ns2egvWey+LbFdibqsNU1YNa
ih6k18U1+mxFv2RhTxrTYmM/aY/lv8vUJ4uo2yc3QJ+tX/dQB5jkv1OMYyrX
Hl+4/2yRXZbXM3N1xNzvb6vPbjkfCebFWuVka31WY48F/XFbs9ezjj7rvhbn
mZPrU/r5bjkXrj0fgD77J3Wuddz+BS2WLi2+1npAUV6KiHA/0HI979ftQQh9
zNefV8jbtfLX64ngOM/LsIJQv9jUN/relvt3jok/3W7j5x4Vl7Kah3LMcn1M
1Ba/S7ZFdlx0bEYMV3lsjNcl0f6KTRstVU8G39sQFp1WpMQo4WOK5MOuG/N0
11l0f8Tf1MfoSvjx0me1dJG3j8FjWuY+G06B/6n5thDaa9JuN/1z1E+u6vs1
lF2H1vWfLVv/UrD10ujFTvddaPZPp8/CIOs5fne4m5zXqf9s/nyOx02N7x/3
56mkzyZf8Mh5s2hyM1DXOpp1yjHos0KunfMOGX1DU7pCPok01tku/Gcniv9s
lXZbNL+vo88K7/LK5lav6h+fc1yuhsjfE/ZMWriucp+i+SbTjuvifa59HgdX
Y3VPQpE+u6e2rfzOH/Kfzarv/Ia/W24rcwi9PttJv5/VRGIf0vVZqvdrKzGn
TPhbg5sJTcO4CR/hvgOvIP6sZlystK9kx/osife6tka4/lUh5reyx1jDjMcW
lXWkDHvL12e7ZId9al7/keREKP/8df1f996OzpfZp4dFugfpvu9w77vPrp/l
sqpIk/xnq/av9eue4i0dsh4n2vwbUZuqPb6UiOPJr0nWM0u333z24T9baz5S
wn9Wjeu9X3vU36eS+qxrie3lokujO5NmL3NyvoL1rWfnx58ter7wn4U+C4CG
v9lufZprctZFc6mbqV638cK9w9l+ZJ0rMyPfULaP9tl5Nxj/xNmWkivv2RLy
Qya/dz3Tv6PUwN+vRWPj1TTK7y3wbVHnvE2dXpe6/S4ZYT5HEv2plCLkqa9w
fwreU5uS/56p8e8NNa/R4w7j4DaMSnbJ4/mfhfuSS4z2mvGa67zjt4xzuE4U
m2/+7qxznrLYCTx3scBXGhesrD7b0bUxBo/TvE39y8Hy8152knutzdEh5P+N
7TwjllkVKuizC2aziU8ZayNav2Hdmii8V89TmjzMld/zviyWF1bdd3YM+izP
JzJdKock8Dzc6d7SMvFnNSfj+1Q3+n7ddrsXfTbMW8Habqk8V5r8GHX7hXz/
WebvfKHLuRT9MjkvFlmbtVNd0vh6bWVvKd9/fBB9lvV9WTkHeZs6ZX1Wzq0t
59TSxp9l+yG08Wd57pYonmT1fk3O2aL7Fd0e3fxxkfmwZuT8Tudru9dn0xh2
qg5eFT5GFcaJFuY3XTW/UgV9K81Ln30NYTyK2XOso4d/qaEH8VioWe/MVy7N
g9+xXm1xnz2J/efocVr8vroEtfvkPeizVfvXWnUP96O/WTS9n6j7dn2PrDtD
+n7d8YXZf0ZcaF3M06bqs1vPR0rEWYt9hH7NHhlV9VmuVxv3NfKD7VufrTsf
gD574joXOHb+XrstE3dYyoEgxI3PKbKWJMVtzSp8DVxlb0nZOFRZe62615Mo
Xr6bI1Tl1ucy9RWpdH8K9Nk0j+i8OB5Uf79r4UNRPY6m6Ec0/cjWJrxPrq3x
98RpTouz85HGT8MT1sJRLAW+F0+7X9QXYpOr/hD6uSfPozt+lWriWoIP51b1
L4lqB5rcAiEaWyjt05yHFN8gC38p3pvE14Qdr+ZcE/eZxfdzfp3+Tef/y318
jk6f9ebpfSrSz4VY9poYaBn6bEuzVuN7BpJYTDXbbRV9Vrc/PAvBrzis51PO
3P3bEd4fJs+9Zr9QpCFaLAc0j2WV1J3HG+zVz0HH95wMpf0mM00e6pDf0meF
2Ja6fDQ+zwXKYheepD5LwrulsHDNVTvOcHvTvf9jPuSyn1cdfXbwrIm78M79
1Evqs1I/rYtPy597ZX32PvtdjPvCY8Xl+GmVRZoDDh4z+hh/Icyh+VhaR9/i
dq2dPwtasKHkIyqvB/F5QFs/frI88oayZ3/z3kGIW7vlPpy6ffIe9NnK/Wud
unvM71H3DuA7/Ty+rnrji2iXyrten7d1Y6v3C3nwOWqWTqeg9Rfdcj4S2bPc
l/B1d9qOf88edfeprD7bVeqtP99h9Nna8wHosyesc4FT4K+1W/tO9cVs98Q9
rPLajvtPJf1w36COEvNf7L/tG10uiLb6W6zPlHWgVl4dy8YBU/baacp5h4Z3
MyXXsKO5X+kx6/2vle/PKj/HzHr/Gt8Dlx7f7ak+uqV8vI6M6nbpqe8CLgwy
H8P3zmFeFZush4k2PniaZ94XfArPLoZkL9drS1/SYbj/jqgNG0ncbt8Ljumz
Y5gOVhgnbzkTn/HtjJyvBc0fx4od8HVEnfqXQn7HkbP3m6+7ovrJ/qp8HR3U
o9TcTFjPtmh0b5LJS5h/Ro4Ty+d9UqzV4aNNXphTbGkruXYSDZ35mZ2dD9bP
Ndr365P9xJ7DtvEN6tyPDMraDfffyvTHYfA147q/KdJn122gHe5ziO6ZR/M7
3k9yH5N67bZwfs90plZvTPN3O/ddHGd+K/f77aDNTaOc9mGepvmzSUPNPlF+
L+v0C4UaohRLPWrHmzbpPE+kfQT644yHEmsRV+x/wr0aiy+bzGspZjrTqXKf
B/Pt6kq/z/e3mGX2PshjY29Czsb/LvJrZ/Vu3czTw05VnyU5zkGqH2aNM3y/
fCu4f4vQLoJjwlzc/J3wOtf6lv6zoT3HG5bCdvoykcYw5ttbMC6K79pb6/1X
YZwh16bBuf6ceQjnOw/mCw/iuBLmwjEuxfFMvgfcN6tK3AMld1MwX5m+2NG+
8Wgv+sNQuU/c17KWviXpwu3rKbmhL8Zq896afZbOK+vpQYKPcNB/xs9K9t3M
8jdU8jTJ7xKq9mlUs0/egz5bp3+tXnexnxzcW4mvZ2gvYzauJnuKao0vchzV
Nk3f16JlmDuH+0JwHX6f+myrP1JsOS0TMp/z9qtsOR/ZXG/yXtdbiMfw99a/
aI+l7muB/6yw9/THlexYtNG6+uyvzQegz56szgVOgz/VbqU4quH8dpr4l7k0
uhA/W2utwVjFx37pXbiY/5tpMdw/K/4s8QP0aHolznm7m3Fb9dPrpPl3wjpK
mqdZdp0l+RzmFWEPRzT3F49tB328H8xXfH+L+xMcL8eOs4KBz/9Zr5MEbSga
8wepT/PSkp7jaPv94w2jll2G/tpV4u0H6zFLHv8DGynOkSD5g5TyExeP4evQ
rNy0os9OdhH0zzr1L4Pgm5Q/n+HxX4viCJZ+d141t3AYz0syCiXGdNb9TPoU
j8YFeafXfZAmDlsVfbbO/cignN3wfrScT5KoVYc+JcX+s/n3bHu7K9RnV2qb
ad2Wn4dbt1XyhLRp8iLp3DX6BV7nLE3OvlffB8pFXIdU28cdwzV5XZHzp+U9
j7zfr7UvtczekvOxGHOpxL3dN/vSZ+X+OfbFytQ7S9hbmou9Tr+m6TvP1ThV
ch9UZlws14+Xy/leNY+VLlYD1y+qtiv7rmwf007n6snvlte3+L3w3ktc8/mo
gj6Z9bkn+HRmFX2MDVLiVsn+nHX6tFp98j70Warev9apu7wXpEybrj6+lMxz
JenrddtvFoqen9u+J8leRu2YsM18JLdIe1PpN+2xxH3V3Q/NWr6VNS9m/sZ1
9dlfmw9Anz1NnQucDH+p3fL4N2FR9h1Lc1Uhj1aoGXpeGrPS98n9nAvvYHl/
Ks97lb0brkXdS4PG92YUfyp+JyePcfLen4X0eaX5sO/S9KZ47hEWwSdVesep
7csr3h/1WsX1kyOtQeSYmeKxrUp71Y+BbezS/bBoLPtS8nbfH9LsLcdncOXR
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
5q4ognbmLuO2vMjXTKT2FNtA2OZy2xr/zAva5+fabtzvEmudKvWLqWoHNezG
99ykTotlSbXsN/oN8CuUt0/mV3ehxtzxXkeJHjG6MVL/WDl8wbeVxFfX6rw1
iHTS2IbleI8yvK3+xMdpxuXQXqvahe43VuFvOOXqtiEeLxXbgp2BilQaf5dT
IXaBnTdG+XayTz8s1rf+a6EWGY8vheNknfF1S1urNf5FY7mbHKMb/+wk1kvB
fax5/jr476n/7Pj9mN+MgX0DfRYAFbRbAJpHdbv0ybqX94Jt1qVXJi1+0u+l
sf3k0s3OsZJBKX02mMfObjSxbsN4gPdzYe3NYwq2rmbKqezb9HNhve05NO63
M66rRaNHTd1cm4aXLe0x3ZsZeVifHh279J/NMgX7cSTl1Nu0/8DOZPefxD7O
BzR/t8jQtjVL+q3Ut33wMCfrzlDb6HmXrIxYC1XqF1HVDurYzbdNo57umA6Z
rxkxQSv0G+A4qGKfqW9dR4lhbl21Eu3WdVMN1pDiy6Y67hlNwv29X6km1LnL
0GuXqe/ugOXi8r8sGmhjsLdp8rKQTpLasHFv0fRGjXcdjsvhZXlvpmqv5wbN
hXw+6fn4OBv7zbWupmS/TDR1a9H4Wa7bmkXwfTk+Ufj9yYtN5maO0H3AnhhQ
nir2zed6ZdrZWoNsUbc/ork0ZCxeTEG/TcrFQDNO1htft7G1WuNfMKedXOni
5Ldo+GCvxz8+Z5HOG83l2eeKD2uZ80e/sUjmLdo9csrnftJ/yMWEHy3QAH0W
ABW0WwCaRyW7XLE9nJmlvfEtysvzVT2XV6E+6ztaTUoolyxHty/ON3nsQf4+
XtCSv+eadaZG0+F5r39s/Xyel94UGtCRsV991qdpv6iddclmriLcPvKKGFOS
xR4psGnb265+le2ght2UuQeKVla13wBHQRX75Hm9BG0hGO8Gm7+v39F5qa9t
0PY485v4nd1mvFgtkmPPzoakU0bSd4CtxE/PfRkVtuH2Dd93XdaG88qA3JV6
Pp0+W1TGb6KlLJ40mpTWLqHPgvKUt29uH+r7lypYN1nv5dMyeuGWXm98rWtr
tca/MuNsGOchmLPo576buXyWPlv2/NEFpDnGsub44ufZa4wx9FmgAfosACpo
twA0jyp2ad/y+alB1tdmfugtyOzz+F6b+Hu+T/6PS+MkvoEV/Mkn76f63KlI
n51xvag3IWezd8wPffDYHI77Tyg6bLhGlfwE+Ht4HsOse2uRG/sK+67oG3GZ
am7Ofeo3MHqykz1d3nJOA6Z1K/tlQaPZpz7rPhpCu7Q+N3YWtLPpdVvbzuS1
WegzF9mA75H9OCRut45Gi4nXWuarE7VRL7CbkWA3i63qV9UOKtsN862J7dPb
/Lj7PhXWlibLzV2n3wDNp5J9eqlfrOC3xXxgJ5ucN4IOm9iRl763ZG2e78FQ
/LmY9pscI8W6Ne7max/xoCxeRd/X9H2ibMMdmr2v4we4r6q/bOgPHtqF3L5T
TaWcPhud52c9vof5PFMbYrq19D5z9LzuW6J+4krUuqDPgiqUtm9hPjdk7yGq
4b2NWXtt0eR1sY5BsPJofs/HQ55XrN74WsvWao1/kv9pOP7FU/pPi+mqm/dH
K59p1G2ywhgF8Vxeq89WPX96Dm1/oPt8Jb7TGr4s1nXCnjSgAfosACpotwA0
jyrz3HQ+ZWjiE4jxDNJ3+2y9t0Ver1x9lsX+C/eh5uZuEXyFgjU084loX5tk
XrX0vyPM88dan8fkXf4F16XiuTZfz2+OeF/P+VvBXHeasYccNJP96bM8z7Q+
xpvFNNDZRp8U9Nm+Gq9jfp3mXU59iMT14/RLOojrVokt1KtfVTuo+n3uA6nd
T872pp/1N/46W/QboNlUs0+PxvFz7mX03Zs/cp0m0SGYrsp1Fp57rHU9F36R
5xwfvnib3yvYh81t/CLOQcZtuKXY8Pw6YzyT6lBFnzUe5b3VTJ9m/Zl912bX
qL6AnPWz6wZAHrXmrZcFsd4zEcdJ/n4vxnlINdo0Hlad8bWerdUa/3hcXk3s
bd4/tDf1E/KDCTFyNfps1fPX0WdDWL+IuAYgD+izAKig3QLQPMraJdd/1Dnj
BjYfa9+pc9Rt1mB5+qz7nMbDHb3pdyI7yVqxlWhGm6OZ3sSKxq/R/9nkaZBz
Rmz8IYaaeTNfc4ex/sxnu1zeJdBo9qbPck3nRh+3kq9r4lgaQg7jd7V9uU+x
jfC8y2z9qFk/cR+/xOZq1q+qHVT9fhInNLDvuTZviU+TxF9p7Ue1Xb8BmkxV
+0zf08X+5cw2uJ8ayx8U6zDeW+q/NV3ys/I2J75nSNtrrP1yLcegRca7gNTf
O37Pwo7T6E+pnsL9+tRrKa/P6veIJ1pr0p/x69HHd+B9CfRZUIVf1Wf5eC3F
NUm/w+KZJGNpjfGV6thavfGPzxl4fK+0fh5ZTxbZ706yV0zQZ3ndNPps5fPX
1GeFuQ/0WZAD9FkAVNBuAWgedfRZnf9AhHb+tH99VtByShRlDre0pH2g+blp
3Y85mXdjGl4Z1LnQxCTjmpsrnzvWnNo0uDXJ/kJky2NkX/qs/yHFkCuI9xzb
QqF9Jp9n6LPatatqu3XrV9kOKn2/agzO9bp3634DNJaq9hn7ZCcaq28nPrHi
+0jW1s7X+yhSbVf1sda+A2C6aOvaUs+boyM5D7I+kq8BZeopIVl7knP1WX1u
z6ReOn0263qK9BgAMqgV3+B8pH9PUASPe5q5B0zX3quPryFb2VqF8W+R+PzK
8eWzqaLPVj4/9FmwZ6DPAqCCdgtA8yhtl19MH33KyoN+KH22XD6FuIwV/0KP
RsJ3Bvp8QO48I4etVGTNLcrHrc9Dv567T7B3+sjYmz5bMs9XXOJ8X75Wf9Wd
V6/P6tedGn22Zv2iYyvaQfnvV12ftjb67Lb9Bmgqle2T5bEZPHuCXiv7TQsa
6Y+X+qVdWep5mRYbxx3xntO9yDwWZBofqJupI6n6SNr227eqP/vO9dkMrTX5
PO7PhD5O4zsofQf6LKhC3fxgcqwcLWE+gdCv83Mdxzlsp0ls10uNjcu/o9FN
y46vIZVtbevxT68D66iiz1Y+P/RZsGegzwKggnYLQPM4Nf9Z821B7nJBiy+x
uEuXXNeN/vWkObp9p/rRKWvdlRwHoU2DmwlNw3n8xyKYx3va+LPCNXgu2c9T
Gl11Fd/A9i3Wp8fEb+iz3Xs7arOZbTksnnxcTX1Wa5v5+myV+glnrWgHxd/n
69Mu2eHvf8l9AKtT8Hl4C7btN0BzqW6fafzw9q1FVpLbS7M3n+cNe54lthzH
kZVJ9x6H+pBPs0SH5efe3n9WZ8M712czxrZczQj+s2DHVMpry+Z3Y90+ewn3
KY0lG71fZDESujX9Z8uOryFb2Vqt8S/Hv3WTn1D57VL6bMXzcz9l6LNgD0Cf
BUAF7RaA5lFan2UxJYUcKBy2bv1NfXbB8smP3zLmZ64T+UTM350kr618Xrnw
XAPC93qm1r9Wtx51P22yHk0y5fwowTp98TJh+Ynq5q4Ah2Bv8Wd5DGeNP9z6
eJfmzxZZrzYtvuVYb/vVZ+vWr6odVP1+GpeznRmbJIxLMnuO36ds12+AZlPH
PhM94bxDnU3cDjmvV4SUKz1ud0p81w187Bw9TlONQdB6WH7JJAauSupjq8af
baw+q8nxt74vOTk/Acihkn1/8TleRizkBC/NI3C28UVgumFe/NmkT9D5z+5V
n603/vnvrF/S6tYsF9kmb2Kl+LOVz5/m49TOLVZ6/Rb6LCgL9FkAVNBuAWge
pe2S79PU7lcK5pq9M808af/6LM8zoo8x5gm+r8l+VWmdbYb5dYW5fLpO5r8f
7n9V6vfOc2vH82b+u0NtfviBcgw4Bvamz/I2Eay1LDkXXYDFcrIbT3J+sD3r
s7XqV9UOqttNmv+Mx/RkfPN4tsY6LkLdfgM0njr2qXtXl5U3LvWJjdvPWB8T
J2Kz90KI1dxSbIf7c+v89IT6ldSADqfPirF32zeSzr1yaXSR3g/os6AK1exb
3P/fuppm2KpP1g3bS6XL83UmvrePcR4MTVv+PX126/FP5+PO5sLtTf2E/oS/
c9H1JZXPL+YUlJ8Rj0eUpc+an5obBsAG6LMAqKDdAtA8Ku0Tu+W5sAyyPtcz
KN9zaNJn61VhrfoL+qwQuy+ctw7JXm7q9h3Urcfqxvwf+Bq7zXLRz2/YdW5i
Copr4+D87ma2ufLJ4f580lqY761rX5nkxDnof1ya3abzzUxfRNBI9qfPhnk1
eFzUNplv7noPoO+RdWcINrhQ3h/sW5+tV7+qdlDZbvg9Df9+Pd3khCbyPi3h
PUya76levwGaTy37lNpQXp5I72XIvhfqC/n9t5KLTqdX/KQ5ySKN9s5a+2xr
xpjUH625+izPTx/pRv0x2Z8Lcl6nShx36LOgCpXtW8k32abxo0VOGLfmO4yf
Yyptkvti8njU4buVyYuzjk2rjHncj/739Nl64x+xWCuBffYmtAg7nOAY933K
/DHOaLZcf3/BdOju7ZTscF/JijL6kurn5+NxJ7yG4PthfCPxHkv3k+m8rd6Y
5u92dBwAMtBnAVBBuwWgeVSyy2C9Nb4Q57BqkX3qfkOfpWhtW5y7K62b9zpi
f5fybq8Wwrpy+LL2ARzLuerPs3IXMd8oby6sufWlm6kDgGay1XjG90tq12Ce
4IueVfieQa6/2gX6rL2lPlunfpXtoIbdeO/ZsUpSmx2JfjkV+w1wHNS1T1Gv
z9nT4Il6T+G+2m/x+0M5bscG93Vc2IZFX9Ty+qzSL7D9wnvRZ0OWVgk7Tv3z
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
Ly/1XmHn+vt7Jf1XTfX/henjq2POz1Nf8/x81a/TfRXcP+v6pWllv/ugjuub
qi5TtfX8PvnS+8t/lwI/x3wKlMcbNJQ9aybpA7NQnJYybj9lR3pyiWNGboDq
IZ+A/Zh/AeyKjf3Z4L6j6T1GMlLGv/Fb8XX5/mxnMBL3ri+Ns64EMyn2Z2Wx
B0KQqzAMZXrTUI7VkMnyvmThv35m/erw0V/sWzAfnyc36rrYukySXmu+P1sX
59GTaBaffyq9s/Sx5q2f/D7qXjfNa1eCj9Xhguwa3DX9anwf8ylQosiTrjLu
xd8f6F51Mp9H1S5Ghe+QkUscNXIDVA75BA4A8y+AHbGvPxvJ8Czti06VxmP4
2EvXs/4p3idM7c+27/z1j59t6We+uela3Xk5L6tnZ/us6c+Vc9ymfdN0zW32
daPX3IvC9HzJ9yIyey/0Ne93fszVv9O23wfGmE+BcoWP6edwunI129iQSxw7
cgNUC/kEDgPzL4BdsK4/G4yVHuwk/6B0knGwKV7uPmFpfzbb1y08vqmfGU4z
+8p21X0K1J5pa6R//cxP3+PZcHkepT+b/Ex9Tfp7qfvWRB+hBK+e+O/55y/W
3XZP6c+WhfkUKI//d/E3bm05hjUue+LcDKWzHCcXP68VvidBLnHMyA1QPeQT
sB/zL4Bdsa0/O71W9xVof459w8GinJte5nOq/L6raX+2Kd53+rMzX7rK8Zu5
e4Kp++Lm7xemPCntxSb7Duh+pn9Nfl/xWPA8EWfQl+5lWxpnmr1v6c/+OuZT
oCTqXuIndRnnvofg/e0q3x/rZ74rRi5xtMgNcFCCh77U53+zN84bmYp/1lP+
/wv5BCzH/AvgF9jyd4HR8We+tDd8b6DYlxxmxsCk/7rt/mHafmYoQ2UPgtql
WzzAzEvf37nm8U/qWtlif1bf113Tnw0myh4Hm/4d6M/+NuZToBzhQ/o5W+ev
/t6G7uVq7+2auMpTyCWOFbkBDot6P6F8qfccJp+A3Zh/AfwGW/4uMDl+5t5b
pw1pX7Q11czuDavs5bptfeymx9Nxtdj3TczS9bOFtbWJzetndetjtY/Pgsxa
3vjzus6foYz+ujJ99iWK7xfJ/rOlYT4FyqHOTW5+75al6HmYPGf4nI5u5BLH
itwAh2WxTqZRWCcTfw+u98D6WeBQMP8C+A22/F1gcvxRK+1Hjt4KL0kEd+k9
uGpX6TrW7/Znp4Om0gdtF/a1TSj7G2zafzZZY6tbP/vF/mz04qTvqeVo+8Wb
90zATzCfAuVQx2/dPRZj4X36XTGHv3MBcgNUFPkE7Mb8C2CXrOnPhhOpr9m7
peBjmj5XuRfYd/qzwWo8PV0ca7LxxMra2Nz4m5zjNh3D017sz/qznfvim4qe
lP4t62d/HfMpUBJlbKtdjDVPCKR3WhzfY+QSR4vcAJVEPgHLMf8C2CFb+rP+
bbqGtXnrbz3u+CLtk7bvFs837c9Gz0qPM973YTAR/8WT6dO0WM+LNcfRk7IH
w0lNhg+eRPF62ygUd9BWHqsrvd4frp8968o0WP5Gs0i8h2Fmj4d4LtDdDw3f
x3wKlEX9O3Y+7l454ofLbxoEU+mdKWNbbh9wconjRW6AKiKfgO2YfwHsjh39
WXXcq63d20UVPaX7vJyc9iTunpr2Zzft0VusevJ52OR6++vUPSS+tf+shNI/
zR33tLbmfF/7N8PXMZ8CJXpzc58x6aojfm6vGXKJo0ZugMohn8ABYP4FsCNW
9GfflTGv9dXv6gfSVXu6Qby3wLL/umY/1vzj/l17yzirVnZf2uDRSfeiVap2
3hX3Jb8fQSTOcm/dhva+Ymsej3wZXtSL7+W0IcMHX8LXUfKzzr3+fpL4HuZT
oGQfngwvNeNb/J2Ia1dCzT7g5BJHj9wAlUI+gQPB/AtgB6zozx6w8D2Q4G1e
QSDhR0kn+QgX55hXGLKRwS5U/boFrBGl41tc0br7Mwq5BBLkBqgE8gkcGOZf
ACWiPwsUcd0C9iGXgDlyA9iLfALVRb4BmKI/CxRx3QL2IZeAOXID2It8AtVF
vgGYoj8LFHHdAvYhl4A5cgPYi3wC1UW+AZiiPwsUcd0C9iGXgDlyA9iLfALV
Rb4BmKI/CxRx3QL2IZeAOXID2It8AtVFvgGYoj8LFHHdAvYhl4A5cgPYi3wC
1UW+AZiiPwsUcd0C9iGXgDlyA9iLfALVRb4BmNpnf/a///5LHqcoG4vrlqLs
K3JJUeZFbijK3iKfFFXdIt8URZmWbtwosz/LmEQdQnHdUpR9RS4pyrzIDUXZ
W+SToqpb5JuiKNPKK7s/CwAAAAAAAADQoz8LAAAAAAAAAPtBfxYAAAAAAAAA
9oP+LAAAAAAAAADsR9n92dXxKcrWivdu57qlKLuKXFKUeZEbirK3yCdFVbfI
N0VRprVp3Pgp+rPUIdbqvppctxRlT5FLijIvckNR9hb5pKjqFvmmKMq0to0b
6/wP8aBN1g==
    "], {{0, 248}, {1384, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> ColorProfileData[CompressedData["
1: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
rsMetXe3z7Svtr/sgDp4OIgcNjp0jiKM8holHlUz6qYj1THQscix3vGhE8Mp
yqnMqcnp5WjL0amjl48+N/qrs7tzjvN257suOi7jXMpcWlxeu9q78lyrXa+5
0dzC3Ga7Nbu9GuMwRjBm05hb7nT38e4L3Fvdv3h4ekg8Gjx6PC090zw3eN5k
6bJiWYtZ570IXkFes72OeH309vAu9N7v/ZePo0+2zy6f52NtxgrGbh/72Nfc
l+u71bfLj+mX5rfFr8vfzJ/rX+P/KMAigB+wI+BZoF1gVuDuwJdBzkGSoENB
74O9g2cGnwjBQsJDKkLaQ3VCE0LXhz4IMw8ThtWH9YW7h08PPxFBiIiMWB5x
k23M5rHr2H3jPMfNHHc6khoZF7k+8lGUfZQkqmU8On7c+JXj70VbRYujm2JA
DDtmZcz9WJvYgtjfJhAnxE6onvCU48KZwTkXR4+bGrcr7l18UPzS+LsJtgmy
hNZEzcRJiXWJ75NCklYkdSWPTp6ZfCnFMEWU0pxKSk1M3ZHaPzF04uqJ3ZPc
J5VPujHZZvK0yRemGE7JmXJ0quZU7tQDaYS0pLRdaZ+5Mdwabn86O31Deh8v
mLeG94IfwF/F7xH4ClYInmX4ZqzIeC70Fa4U9mT6Z1Zl9oqCRetFr7IisjZn
vc+Oyd6ZPZiTlLM3l5yblntYrCPOFp/OM8mblteZ75Bfnt9V4F2wuqBPEinZ
IUWkk6XNhbrwmNMms5X9JHtY5FdUXfShOLH4wDTtaeJpbSX2JYtKnpWGlf4y
HZ/Om946w2zG3BkPZwbO3DoLmZU+q3W2xez5s7vnhM+pnUuZmz339zLnshVl
b+clzWuZbzx/zvzHP4X/VF+uUS4pv7nAZ8HmhfhC0cL2RW6L1i36WsGvuFjp
XFlV+Xkxb/HFn11+Xvvz4JKMJe1LPZZuWkZcJl52Y7n/8toV2itKVzxeOX5l
4yrmqopVb1dPXX2hakzV5jWUNbI1XWuj1javs1y3bN3n9Znrr1cHVe/dYLRh
0Yb3G/kbr2wK2NSw2Xhz5eZPW0Rbbm0N39pYY11TtY24rWjb0+2J28/9wvql
bofhjsodX3aKd3bVcmpP13nW1e0y2rW0Hq2X1ffsnrS7Y0/InuYGx4atexl7
K/eBfbJ9f/ya9uuN/ZH7Ww+wDjQctDq44RD9UEUj0ljS2NeU2dTVnNLceXjc
4dYWn5ZDvzn9tvOI2ZHqo3pHlx6jHJt/bPB46fH+E/knek8KTz5undp691Ty
qWunJ5xuPxN55vzZsLOnzgWeO37e9/yRC94XDl9kXWy65HGpsc297dDv7r8f
avdob7zsebm5w6ujpXNs57Er/ldOXg25evYa+9ql69HXO28k3Lh1c9LNrlv8
W89v59x+dafozsDdOfcI9yrua92vemD0oOYfdv/Y2+XRdfRhyMO2R3GP7j7m
PX7xRPrkc/f8p7SnVc9Mn9U9d31+pCesp+OPiX90v8h/MdBb/qf2nxte2r48
+FfAX219yX3drySvBl8vfmPwZufbMW9b+2P7H7zLfTfwvuKDwYfaj6yP5z4l
fXo2UPyZ9HntF7svLV8jv94bzB0czOdKuIqjAAYbmpEBwOudANBS4NmhAwCK
hvLupRBEeV9UIPCfsPJ+phAPAHYGwGvsHACi4BllE2xWEFPhU370jg8AqJvb
cFOJNMPNVemLCm8whA+Dg2+MASC1APBFMjg4sHFw8Mt2SPY2ACcKlHc+uRDh
+X6LgRy13dQCP8o/AeWkeK8=
      "], "RGB", "XYZ"], Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{1384, 248},
  PlotRange->{{0, 1384}, {0, 248}}]], "Input",
 CellChangeTimes->{3.742699068766926*^9},
 CellLabel->
  "In[668]:=",ExpressionUUID->"e41ba6ee-0535-48a9-92c4-7492580961c8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"#", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "&"}], " ", "/@", " ", "html"}], ",", 
   " ", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]], "Code",
 CellChangeTimes->{{3.74267563650646*^9, 3.742675647185376*^9}, {
   3.742683156827796*^9, 3.742683252797492*^9}, {3.742683473520993*^9, 
   3.742683490520529*^9}, 3.742684812387639*^9, {3.742685409968485*^9, 
   3.74268542123131*^9}, {3.7426856032035007`*^9, 3.742685613201429*^9}},
 CellLabel->
  "In[265]:=",ExpressionUUID->"e1560894-7f2c-4ac7-b064-ad52bef71977"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"George W. Bush, of Texas\"\>", "\<\"Albert Gore, Jr., of \
Tennessee\"\>", "\<\"Richard B. Cheney, of Wyoming\"\>", "\<\"Joseph \
Lieberman, of Connecticut\"\>", "", "", "", ""},
    {"\<\"George W. Bush, of Texas\"\>", "\<\"John F. Kerry, of Massachusetts\
\"\>", "\<\"John Edwards, of North Carolina\"\>", "\<\"Richard B. Cheney, of \
Wyoming\"\>", "\<\"John Edwards, of North Carolina\"\>", "", "", ""},
    {"\<\"Barack Obama, of Illinois\"\>", "\<\"John McCain, of Arizona\"\>", \
"\<\"Joe Biden, of Delaware\"\>", "\<\"Sarah Palin, of Alaska\"\>", "", "", 
     "", ""},
    {"\<\"Barack Obama, of Illinois\"\>", "\<\"Mitt Romney, of \
Massachusetts\"\>", "\<\"Joe Biden, of Delaware\"\>", "\<\"Paul Ryan, of \
Wisconsin\"\>", "", "", "", ""},
    {"\<\"Donald Trump, of New York\"\>", "\<\"Other\"\>", "\<\"Hillary \
Clinton, of New York\"\>", "\<\"Other\"\>", "\<\"Mike Pence, of Indiana\"\>", \
"\<\"Other\"\>", "\<\"Tim Kaine, of Virginia\"\>", "\<\"Other\"\>"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.742684901219351*^9, {3.742685606250457*^9, 3.7426856135525703`*^9}, 
   3.742685675860021*^9, 3.74269014049297*^9, 3.742690959475263*^9, {
   3.742691034241787*^9, 3.742691048322316*^9}, {3.7426954825808697`*^9, 
   3.742695483421114*^9}, 3.742697335589766*^9, {3.74269893836981*^9, 
   3.742698944339458*^9}, 3.742699076681292*^9, 3.742700543743309*^9, {
   3.7428273461439257`*^9, 3.742827352451974*^9}},
 CellLabel->
  "Out[265]=",ExpressionUUID->"a3ca0cc1-1413-4994-a30d-61d8ada6de88"]
}, Open  ]],

Cell["\<\
This is a little hacky, but let\[CloseCurlyQuote]s define the elections and \
map the candidates to their parties and the index of the field with their \
results, R then D\
\>", "Text",
 CellChangeTimes->{{3.7426846700063457`*^9, 3.742684696739369*^9}, {
  3.742686345717614*^9, 
  3.7426863472840843`*^9}},ExpressionUUID->"7e560dd1-9c1c-4bf2-bf4e-\
7f7fdb35d283"],

Cell[BoxData[
 RowBox[{
  RowBox[{"candidates", " ", "=", " ", 
   RowBox[{"{", "\n", "\t", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{"{", " ", "\"\<2000\>\"", " ", "}"}], ",", " ", 
       RowBox[{"{", " ", 
        RowBox[{
        "\"\<George W. Bush\>\"", ",", " ", "\"\<R\>\"", ",", " ", "3"}], " ",
         "}"}], ",", " ", 
       RowBox[{"{", " ", 
        RowBox[{
        "\"\<Albert Gore, Jr.\>\"", ",", " ", "\"\<D\>\"", ",", " ", "4"}], 
        " ", "}"}]}], " ", "}"}], ",", " ", "\n", "\t", 
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{"{", " ", "\"\<2004\>\"", " ", "}"}], ",", " ", 
       RowBox[{"{", " ", 
        RowBox[{
        "\"\<George W. Bush\>\"", ",", " ", "\"\<R\>\"", ",", " ", "3"}], " ",
         "}"}], ",", " ", 
       RowBox[{"{", " ", 
        RowBox[{
        "\"\<John F. Kerry\>\"", ",", " ", "\"\<D\>\"", ",", " ", "4"}], " ", 
        "}"}]}], " ", "}"}], ",", "\n", "\t", 
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{"{", " ", "\"\<2008\>\"", " ", "}"}], ",", " ", 
       RowBox[{"{", " ", 
        RowBox[{"\"\<John McCain\>\"", ",", " ", "\"\<R\>\"", ",", " ", "4"}],
         " ", "}"}], ",", " ", 
       RowBox[{"{", " ", 
        RowBox[{
        "\"\<Barack Obama\>\"", ",", " ", "\"\<D\>\"", ",", " ", "3"}], " ", 
        "}"}]}], " ", "}"}], ",", "\n", "\t", 
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{"{", " ", "\"\<2012\>\"", " ", "}"}], ",", " ", 
       RowBox[{"{", " ", 
        RowBox[{"\"\<Mitt Romney\>\"", ",", " ", "\"\<R\>\"", ",", " ", "4"}],
         " ", "}"}], ",", " ", 
       RowBox[{"{", " ", 
        RowBox[{
        "\"\<Barack Obama\>\"", ",", " ", "\"\<D\>\"", ",", " ", "3"}], " ", 
        "}"}]}], " ", "}"}], ",", "\n", "\t", 
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{"{", " ", "\"\<2016\>\"", " ", "}"}], ",", " ", 
       RowBox[{"{", " ", 
        RowBox[{
        "\"\<Donald Trump\>\"", ",", " ", "\"\<R\>\"", ",", " ", "3"}], " ", 
        "}"}], ",", " ", 
       RowBox[{"{", " ", 
        RowBox[{
        "\"\<Hillary Clinton\>\"", ",", " ", "\"\<D\>\"", ",", " ", "5"}], 
        " ", "}"}], ",", " ", 
       RowBox[{"{", " ", 
        RowBox[{"\"\<Other R\>\"", ",", " ", "\"\<R\>\"", ",", " ", "4"}], 
        " ", "}"}], ",", " ", 
       RowBox[{"{", " ", 
        RowBox[{"\"\<Other D\>\"", ",", " ", "\"\<D\>\"", ",", " ", "6"}], 
        " ", "}"}]}], " ", "}"}]}], "\n", "}"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.742684430903082*^9, 3.742684434837036*^9}, {
  3.742684652325555*^9, 3.7426846592789593`*^9}, {3.742685711224069*^9, 
  3.742685745854382*^9}, {3.742685863980994*^9, 3.7426859047703648`*^9}, {
  3.742686351062991*^9, 3.742686392035232*^9}, {3.74268793372978*^9, 
  3.742687948767061*^9}, {3.742688459338602*^9, 3.742688510799163*^9}},
 CellLabel->
  "In[266]:=",ExpressionUUID->"7b39f234-e4f3-4429-9423-a7f10eea2ee2"],

Cell["\<\
And given some inconsistencies in formatting, we need a clean list of state \
names, which we can get from the first table\
\>", "Text",
 CellChangeTimes->{{3.742686607077608*^9, 
  3.742686643379217*^9}},ExpressionUUID->"9571b937-31a9-4dd3-9827-\
6063e8df8c30"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"stateNames", " ", "=", " ", 
   RowBox[{"html", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", 
      RowBox[{"3", ";;", "53"}], ",", "1"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{"stateNames", " ", "//", " ", "Shallow"}]}], "Code",
 CellChangeTimes->{{3.7426866512697153`*^9, 3.742686727609206*^9}},
 CellLabel->
  "In[267]:=",ExpressionUUID->"7741e10f-4b22-4602-8003-1dd97e74a18f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Alabama\"\>", ",", "\<\"Alaska\"\>", ",", "\<\"Arizona\"\>", 
   ",", "\<\"Arkansas\"\>", ",", "\<\"California\"\>", 
   ",", "\<\"Colorado\"\>", ",", "\<\"Connecticut\"\>", 
   ",", "\<\"Delaware\"\>", ",", "\<\"District of Columbia\"\>", 
   ",", "\<\"Florida\"\>", ",", 
   RowBox[{"\[LeftSkeleton]", "41", "\[RightSkeleton]"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.742686658133148*^9, 3.7426867279844933`*^9}, 
   3.742690146344747*^9, 3.7426909595493298`*^9, {3.742691034337289*^9, 
   3.742691053660489*^9}, 3.7426915128094473`*^9, {3.742695482653077*^9, 
   3.742695483516664*^9}, 3.742697343190436*^9, 3.7426989385117598`*^9, 
   3.742699086905776*^9, 3.742700548018671*^9, {3.7427006651228456`*^9, 
   3.7427006744731493`*^9}, {3.742827346290691*^9, 3.742827357531918*^9}},
 CellLabel->
  "Out[268]//Shallow=",ExpressionUUID->"431721c3-37ff-4026-8bd0-51b7ee13d90f"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"stateEntities", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Interpreter", "[", "\"\<USState\>\"", "]"}], "[", "#", "]"}], 
     "&"}], " ", "/@", " ", "stateNames"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.7427005271059437`*^9, 3.742700567069805*^9}, {
  3.7427006020330544`*^9, 3.7427006724285927`*^9}},
 CellLabel->
  "In[269]:=",ExpressionUUID->"e592e689-0b4e-4cff-827a-7a13281c9526"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"stateEntities", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Code",
 CellChangeTimes->{{3.742700679053423*^9, 3.742700693892008*^9}},
 CellLabel->
  "In[270]:=",ExpressionUUID->"20a2d1d4-3f03-431c-816f-801f1b290a82"],

Cell[BoxData[
 TemplateBox[{"\"Alabama, United States\"",RowBox[{"Entity", "[", 
     RowBox[{"\"AdministrativeDivision\"", ",", 
       RowBox[{"{", 
         RowBox[{"\"Alabama\"", ",", "\"UnitedStates\""}], "}"}]}], "]"}],
   "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Alabama\\\", \
\\\"UnitedStates\\\"}]\"","\"administrative division\""},
  "Entity"]], "Output",
 CellChangeTimes->{{3.742700687028213*^9, 3.742700694301536*^9}, {
  3.742827346378628*^9, 3.742827361881365*^9}},
 CellLabel->
  "Out[270]=",ExpressionUUID->"25b6ced5-3ab8-4296-911a-1c9908dd611e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"readElection", "[", "index_", "]"}], " ", ":=", " ", 
  RowBox[{"(", "\n", "\t", 
   RowBox[{
    RowBox[{"keys", " ", "=", " ", 
     RowBox[{"candidates", "[", 
      RowBox[{"[", "index", "]"}], "]"}]}], ";", "\n", "\t", 
    RowBox[{"data", " ", "=", " ", 
     RowBox[{"Rest", "@", 
      RowBox[{"Rest", "@", 
       RowBox[{"html", "[", 
        RowBox[{"[", "index", "]"}], "]"}]}]}]}], ";", "\n", "\t", "\n", "\t", 
    RowBox[{"(*", " ", 
     RowBox[{
     "A", " ", "few", " ", "states", " ", "in", " ", "2016", " ", "asterisks",
       " ", "that", " ", "usually", " ", "refer", " ", "to", " ", 
      "negligible", " ", "\"\<faithless electors\>\"", " ", 
      RowBox[{"We", "'"}], "ll", " ", "remove", " ", "those", " ", 
      "asterisks", " ", "for", " ", 
      RowBox[{"now", "."}]}], " ", "*)"}], "\n", "\t", 
    RowBox[{"data", " ", "=", " ", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", "\n", "\t\t", 
         RowBox[{
          RowBox[{"name", " ", "=", " ", 
           RowBox[{"StringReplace", "[", 
            RowBox[{
             RowBox[{"StringReplace", "[", 
              RowBox[{
               RowBox[{"First", "@", "#"}], ",", " ", 
               RowBox[{"\"\<*\>\"", "\[Rule]", "\"\<\>\""}]}], "]"}], ",", 
             " ", 
             RowBox[{
              RowBox[{
              "RegularExpression", "[", "\"\< \\\\(.*\\\\)\>\"", "]"}], " ", 
              "\[Rule]", " ", "\"\<\>\""}]}], "]"}]}], ";", "\t\t", "\n", 
          "\t\t", 
          RowBox[{"Prepend", "[", 
           RowBox[{
            RowBox[{"Rest", "@", "#"}], ",", " ", "name"}], "]"}]}], "\n", 
         "\t", ")"}], "&"}], ",", " ", "data"}], "]"}]}], ";", "\n", "\t", 
    "\n", "\t", 
    RowBox[{"(*", " ", 
     RowBox[{
     "and", " ", "remove", " ", "rows", " ", "like", " ", "\"\<Total\>\"", 
      " ", "or", " ", "\"\<Notes\>\"", " ", "that", " ", "are", " ", "not", 
      " ", "results"}], " ", "*)"}], "\n", "\t", 
    RowBox[{"data", " ", "=", " ", 
     RowBox[{"Select", "[", 
      RowBox[{"data", ",", " ", 
       RowBox[{
        RowBox[{"MemberQ", "[", 
         RowBox[{"stateNames", ",", " ", 
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "&"}]}], "]"}]}], ";", 
    "\n", "\t\t", "\n", "\t", 
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Found \>\"", " ", "<>", " ", 
      RowBox[{"ToString", "@", 
       RowBox[{"Length", "@", "data"}]}], " ", "<>", " ", 
      "\"\< results for year \>\"", " ", "<>", " ", 
      RowBox[{"keys", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "1"}], "]"}], "]"}], " ", "<>", " ", 
      "\"\<. This number should be 51.\>\""}], "]"}], ";", "\n", "\t\t", "\n",
     "\t", 
    RowBox[{"indexR", " ", "=", " ", 
     RowBox[{"candidates", "[", 
      RowBox[{"[", 
       RowBox[{"index", ",", " ", "2", ",", " ", "3"}], "]"}], "]"}]}], ";", 
    "\n", "\t", 
    RowBox[{"indexD", " ", "=", " ", 
     RowBox[{"candidates", "[", 
      RowBox[{"[", 
       RowBox[{"index", ",", " ", "3", ",", " ", "3"}], "]"}], "]"}]}], ";", 
    "\n", "\t", 
    RowBox[{"otherR", " ", "=", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "@", "keys"}], " ", "\[Equal]", " ", "5"}], ",", 
       " ", 
       RowBox[{"candidates", "[", 
        RowBox[{"[", 
         RowBox[{"index", ",", " ", "4", ",", " ", "3"}], "]"}], "]"}], ",", 
       " ", "0"}], "]"}]}], ";", "\n", "\t", 
    RowBox[{"otherD", " ", "=", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "@", "keys"}], " ", "\[Equal]", " ", "5"}], ",", 
       " ", 
       RowBox[{"candidates", "[", 
        RowBox[{"[", 
         RowBox[{"index", ",", " ", "5", ",", " ", "3"}], "]"}], "]"}], ",", 
       " ", "0"}], "]"}]}], ";", "\n", "\t", "\n", "\t", 
    RowBox[{"results", " ", "=", " ", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", "\n", "\t\t", 
         RowBox[{
          RowBox[{"result", " ", "=", " ", 
           RowBox[{"<|", "\n", "\t\t\t", 
            RowBox[{
             RowBox[{"\"\<year\>\"", " ", "\[Rule]", " ", 
              RowBox[{"keys", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ",", "\n", "\t\t\t", 
             
             RowBox[{"\"\<state\>\"", " ", "\[Rule]", " ", 
              RowBox[{"First", "@", "#"}]}], ",", "\n", "\t\t\t", 
             RowBox[{"\"\<ev\>\"", " ", "\[Rule]", " ", 
              RowBox[{"Abs", "[", 
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ",", " ", 
             RowBox[{"(*", " ", 
              RowBox[{
              "there", " ", "appears", " ", "to", " ", "be", " ", "an", " ", 
               "occassional", " ", "error", " ", "where", " ", "total", " ", 
               "EVs", " ", "are", " ", "negative"}], " ", "*)"}], "\n", 
             "\t\t\t", 
             RowBox[{"\"\<R\>\"", " ", "\[Rule]", " ", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "indexR", "]"}], "]"}], " ", "\[Equal]", " ", 
                 "\"\<-\>\""}], ",", " ", "0", ",", " ", 
                RowBox[{"ToExpression", "@", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "indexR", "]"}], "]"}]}]}], "]"}]}], ",", "\n",
              "\t\t\t", 
             RowBox[{"\"\<D\>\"", " ", "\[Rule]", " ", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "indexD", "]"}], "]"}], " ", "\[Equal]", " ", 
                 "\"\<-\>\""}], ",", " ", "0", ",", " ", 
                RowBox[{"ToExpression", "@", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "indexD", "]"}], "]"}]}]}], "]"}]}]}], "\n", 
            "\t\t", "|>"}]}], ";", "\n", "\t\t", 
          RowBox[{
           RowBox[{"result", "[", "\"\<winner\>\"", "]"}], " ", "=", " ", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"result", "[", "\"\<D\>\"", "]"}], " ", "<", " ", 
              RowBox[{"result", "[", "\"\<R\>\"", "]"}]}], ",", " ", 
             RowBox[{"Most", "@", 
              RowBox[{"keys", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", 
             RowBox[{"Most", "@", 
              RowBox[{"keys", "[", 
               RowBox[{"[", "3", "]"}], "]"}]}]}], "]"}]}], ";", "\n", "\t\t", 
          RowBox[{"(*", " ", 
           RowBox[{
           "There", " ", "are", " ", "a", " ", "few", " ", "cases", " ", "in",
             " ", "2016", " ", "where", " ", "\"\<faithless electors\>\"", 
            " ", "casts", " ", "electoral", " ", "votes", " ", "for", " ", 
            "someone", " ", "other", " ", "than", " ", "the", " ", 
            RowBox[{"winner", "."}]}], " ", "*)"}], "\n", "\t\t", 
          RowBox[{"(*", " ", 
           RowBox[{
           "They", " ", "should", " ", "count", " ", "for", " ", "the", " ", 
            "winner"}], " ", "*)"}], "\n", "\t\t", 
          RowBox[{
           RowBox[{"result", "[", "\"\<R\>\"", "]"}], " ", "+=", " ", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"otherR", " ", ">", " ", "0"}], " ", "&&", " ", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "otherR", "]"}], "]"}], " ", "\[NotEqual]", " ", 
               "\"\<-\>\""}]}], ",", " ", 
             RowBox[{"ToExpression", "[", 
              RowBox[{"#", "[", 
               RowBox[{"[", "otherR", "]"}], "]"}], "]"}], ",", " ", "0"}], 
            "]"}]}], ";", "\n", "\t\t", 
          RowBox[{
           RowBox[{"result", "[", "\"\<D\>\"", "]"}], " ", "+=", " ", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"otherD", " ", ">", " ", "0"}], " ", "&&", " ", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "otherD", "]"}], "]"}], " ", "\[NotEqual]", " ", 
               "\"\<-\>\""}]}], ",", " ", 
             RowBox[{"ToExpression", "[", 
              RowBox[{"#", "[", 
               RowBox[{"[", "otherD", "]"}], "]"}], "]"}], ",", " ", "0"}], 
            "]"}]}], ";", "\t\t", "\n", "\t\t", "result"}], "\n", "\t\t", 
         ")"}], "&"}], ",", "\n", "\t\t", "data"}], "\n", "\t", "]"}]}], ";", 
    "\n", "\t", 
    RowBox[{"AssociationThread", "[", 
     RowBox[{"stateEntities", ",", " ", "results"}], "]"}]}], "\n", 
   ")"}]}]], "Code",
 CellChangeTimes->{{3.7426833460263557`*^9, 3.742683388721303*^9}, {
   3.7426838610302477`*^9, 3.742683911882155*^9}, 3.742684724309988*^9, {
   3.742685755655135*^9, 3.742685756557263*^9}, {3.7426857883512*^9, 
   3.742685797894953*^9}, {3.742685842242655*^9, 3.742685888730763*^9}, {
   3.742685928186297*^9, 3.742686114604944*^9}, {3.742686164563286*^9, 
   3.742686208641315*^9}, {3.742686245495823*^9, 3.742686318704091*^9}, {
   3.742686397172946*^9, 3.742686498762445*^9}, {3.742686529208744*^9, 
   3.742686542910289*^9}, {3.74268674501343*^9, 3.742686797616378*^9}, {
   3.7426870880729027`*^9, 3.742687525068281*^9}, {3.742687854261038*^9, 
   3.7426878699699078`*^9}, {3.74268796995933*^9, 3.742688402987899*^9}, {
   3.742688519954955*^9, 3.742688773705208*^9}, {3.742688878160297*^9, 
   3.742688878559366*^9}, {3.742688943932961*^9, 3.74268896120667*^9}, 
   3.7426891103719254`*^9, {3.74268944123313*^9, 3.742689510012539*^9}, {
   3.7426895575656*^9, 3.742689561458413*^9}, {3.7426898849247704`*^9, 
   3.742689909137525*^9}, {3.74269546712215*^9, 3.7426954697761087`*^9}, {
   3.742697363177248*^9, 3.742697396744907*^9}, {3.742699128182529*^9, 
   3.742699134820197*^9}, {3.742699188388451*^9, 3.742699204585884*^9}, {
   3.7426992457534323`*^9, 3.742699306616238*^9}, {3.742700704192894*^9, 
   3.742700705189044*^9}},
 CellLabel->
  "In[271]:=",ExpressionUUID->"0c95dbc7-0350-4a21-9785-28cb6cfa7a8a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"results", " ", "=", " ", 
   RowBox[{"readElection", "[", "5", "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.7426865098152647`*^9, 3.742686512957615*^9}, {
   3.7426880864356956`*^9, 3.742688087033589*^9}, {3.742688892940143*^9, 
   3.742688899266502*^9}, {3.742689576225724*^9, 3.742689672071589*^9}, {
   3.742689962263661*^9, 3.7426899840750504`*^9}, {3.74269145350145*^9, 
   3.742691493263624*^9}, {3.742697455971075*^9, 3.742697458953742*^9}, 
   3.7426991378029633`*^9},
 CellLabel->
  "In[272]:=",ExpressionUUID->"b137584d-f5ec-4fd0-b7f7-a7ecd0d818af"],

Cell[BoxData["\<\"Found 51 results for year 2016. This number should be 51.\"\
\>"], "Print",
 CellChangeTimes->{
  3.742691517708233*^9, {3.742695482739565*^9, 3.742695483600128*^9}, 
   3.742697459733782*^9, 3.742698938606824*^9, 3.742699099257085*^9, {
   3.742699176041692*^9, 3.742699197617423*^9}, {3.742699266279642*^9, 
   3.742699309994382*^9}, 3.7427007092079763`*^9, {3.742827346477428*^9, 
   3.7428273720393267`*^9}},
 CellLabel->
  "During evaluation of \
In[272]:=",ExpressionUUID->"1b6e57ef-85ef-46dc-9aa5-f08d64d9e9a2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"CA", " ", "=", " ", 
  RowBox[{"stateEntities", "[", 
   RowBox[{"[", "5", "]"}], "]"}]}], "\n", 
 RowBox[{"results", "[", "CA", "]"}]}], "Code",
 CellChangeTimes->{{3.7426991045776377`*^9, 3.742699105434095*^9}, {
  3.7426993159577293`*^9, 3.74269932141171*^9}, {3.7427007314685383`*^9, 
  3.742700749667104*^9}},
 CellLabel->
  "In[273]:=",ExpressionUUID->"3468b305-8ec0-4d6a-96a5-f551025f78d2"],

Cell[BoxData[
 TemplateBox[{"\"California, United States\"",RowBox[{"Entity", "[", 
     RowBox[{"\"AdministrativeDivision\"", ",", 
       RowBox[{"{", 
         RowBox[{"\"California\"", ",", "\"UnitedStates\""}], "}"}]}], "]"}],
   "\"Entity[\\\"AdministrativeDivision\\\", {\\\"California\\\", \
\\\"UnitedStates\\\"}]\"","\"administrative division\""},
  "Entity"]], "Output",
 CellChangeTimes->{
  3.742699105911861*^9, {3.742699177633485*^9, 3.742699198917923*^9}, {
   3.742699312918646*^9, 3.742699321819105*^9}, {3.742700713136697*^9, 
   3.742700750910983*^9}, {3.742827346539735*^9, 3.7428273743464622`*^9}},
 CellLabel->
  "Out[273]=",ExpressionUUID->"7e590540-752d-4e59-8d52-2204f697aba9"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"year\"\>", "\[Rule]", "\<\"2016\"\>"}], ",", 
   RowBox[{"\<\"state\"\>", "\[Rule]", "\<\"California\"\>"}], ",", 
   RowBox[{"\<\"ev\"\>", "\[Rule]", "55"}], ",", 
   RowBox[{"\<\"R\"\>", "\[Rule]", "0"}], ",", 
   RowBox[{"\<\"D\"\>", "\[Rule]", "55"}], ",", 
   RowBox[{"\<\"winner\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"Hillary Clinton\"\>", ",", "\<\"D\"\>"}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.742699105911861*^9, {3.742699177633485*^9, 3.742699198917923*^9}, {
   3.742699312918646*^9, 3.742699321819105*^9}, {3.742700713136697*^9, 
   3.742700750910983*^9}, {3.742827346539735*^9, 3.742827374361341*^9}},
 CellLabel->
  "Out[274]=",ExpressionUUID->"733207d7-3e08-495a-9d52-7330dbe7540b"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Save", "[", 
   RowBox[{"\"\<./data/election_results_2016.wl\>\"", ",", " ", "results"}], 
   "]"}], ";"}]], "Code",
 CellChangeTimes->{{3.7426900565220327`*^9, 3.742690095711782*^9}, 
   3.742690162415495*^9, {3.742690287503448*^9, 3.742690292410102*^9}, {
   3.7426909652176123`*^9, 3.7426909653665752`*^9}, {3.742697465715427*^9, 
   3.742697466721922*^9}},
 CellLabel->
  "In[275]:=",ExpressionUUID->"ae49020b-94d3-472b-935c-8d873f3f6df1"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1220, 751},
WindowMargins->{{20, Automatic}, {Automatic, 44}},
WindowStatusArea->None,
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 520, 11, 72, "Code",ExpressionUUID->"7c7ec41f-99d0-4464-acd5-26fbe7c3a19a"],
Cell[CellGroupData[{
Cell[1103, 35, 263, 4, 67, "Section",ExpressionUUID->"a2df0621-201b-45c5-8d2c-cb320c987389"],
Cell[CellGroupData[{
Cell[1391, 43, 275, 6, 54, "Subsection",ExpressionUUID->"4aea63ea-ffae-4fec-ad13-ab84b0c73367"],
Cell[1669, 51, 423, 10, 37, "Text",ExpressionUUID->"5e4755fb-5db7-41e6-84ed-0b265239fd37"],
Cell[2095, 63, 712, 15, 52, "Code",ExpressionUUID->"e9c280f9-0f38-4a5d-ae9a-4a0588da2c59"],
Cell[2810, 80, 506, 9, 35, "Text",ExpressionUUID->"8e0e48a7-646f-411d-8674-4e69684577e9"],
Cell[3319, 91, 47531, 785, 190, "Input",ExpressionUUID->"e41ba6ee-0535-48a9-92c4-7492580961c8"],
Cell[CellGroupData[{
Cell[50875, 880, 607, 14, 52, "Code",ExpressionUUID->"e1560894-7f2c-4ac7-b064-ad52bef71977"],
Cell[51485, 896, 1715, 30, 243, "Output",ExpressionUUID->"a3ca0cc1-1413-4994-a30d-61d8ada6de88"]
}, Open  ]],
Cell[53215, 929, 374, 8, 35, "Text",ExpressionUUID->"7e560dd1-9c1c-4bf2-bf4e-7f7fdb35d283"],
Cell[53592, 939, 2913, 70, 167, "Code",ExpressionUUID->"7b39f234-e4f3-4429-9423-a7f10eea2ee2"],
Cell[56508, 1011, 272, 6, 35, "Text",ExpressionUUID->"9571b937-31a9-4dd3-9827-6063e8df8c30"],
Cell[CellGroupData[{
Cell[56805, 1021, 419, 10, 72, "Code",ExpressionUUID->"7741e10f-4b22-4602-8003-1dd97e74a18f"],
Cell[57227, 1033, 923, 15, 45, "Output",ExpressionUUID->"431721c3-37ff-4026-8bd0-51b7ee13d90f"]
}, Open  ]],
Cell[58165, 1051, 449, 11, 52, "Code",ExpressionUUID->"e592e689-0b4e-4cff-827a-7a13281c9526"],
Cell[CellGroupData[{
Cell[58639, 1066, 237, 5, 52, "Code",ExpressionUUID->"20a2d1d4-3f03-431c-816f-801f1b290a82"],
Cell[58879, 1073, 570, 11, 43, "Output",ExpressionUUID->"25b6ced5-3ab8-4296-911a-1c9908dd611e"]
}, Open  ]],
Cell[59464, 1087, 10083, 224, 775, "Code",ExpressionUUID->"0c95dbc7-0350-4a21-9785-28cb6cfa7a8a"],
Cell[CellGroupData[{
Cell[69572, 1315, 596, 11, 52, "Code",ExpressionUUID->"b137584d-f5ec-4fd0-b7f7-a7ecd0d818af"],
Cell[70171, 1328, 536, 10, 24, "Print",ExpressionUUID->"1b6e57ef-85ef-46dc-9aa5-f08d64d9e9a2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[70744, 1343, 422, 9, 72, "Code",ExpressionUUID->"3468b305-8ec0-4d6a-96a5-f551025f78d2"],
Cell[71169, 1354, 703, 13, 43, "Output",ExpressionUUID->"7e590540-752d-4e59-8d52-2204f697aba9"],
Cell[71875, 1369, 823, 17, 37, "Output",ExpressionUUID->"733207d7-3e08-495a-9d52-7330dbe7540b"]
}, Open  ]],
Cell[72713, 1389, 478, 10, 52, "Code",ExpressionUUID->"ae49020b-94d3-472b-935c-8d873f3f6df1"]
}, Open  ]]
}, Open  ]]
}
]
*)

